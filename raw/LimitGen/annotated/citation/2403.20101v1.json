{
    "title": "RealKIE: Five Novel Datasets for Enterprise Key Information Extraction",
    "abstract": "We introduce RealKIE, a benchmark of five challenging datasets aimed at advancing key information extraction methods, with an emphasis on enterprise applications. The datasets include a diverse range of documents including SEC S1 Filings, US Non-disclosure Agreements, UK Charity Reports, FCC Invoices, and Resource Contracts. Each presents unique challenges: poor text serialization, sparse annotations in long documents, and complex tabular layouts. These datasets provide a realistic testing ground for key information extraction tasks like investment analysis and legal data processing.",
    "sections": [
        {
            "section_id": "1",
            "parent_section_id": null,
            "section_name": "Introduction",
            "text": "The NLP community has a long history of producing and publishing benchmark datasets for information extraction tasks Sang and Meulder (2003  ###reference_b34###); Stanisławek et al. (2021  ###reference_b36###); Weischedel et al. (2013  ###reference_b41###); Derczynski et al. (2017  ###reference_b6###); Park et al. (2019  ###reference_b33###); Hendrycks et al. (2021  ###reference_b11###); Holt and Chisholm (2018  ###reference_b12###); Leivaditi et al. (2020  ###reference_b24###); Funaki et al. (2020  ###reference_b9###); Koreeda and Manning (2021  ###reference_b19###). Benchmarks like these have driven important advancements in key information extraction, but save for the notable exceptions of Hendrycks et al. (2021  ###reference_b11###) and Stanisławek et al. (2021  ###reference_b36###), they lack a certain amount of realism in terms of the types of complicated information extraction tasks performed by knowledge workers in an enterprise setting. The difficulties we intend to shed light on are:\npoor document quality, leading to OCR artifacts and poor text serialization Lopresti (2008  ###reference_b28###); van Strien. et al. (2020  ###reference_b38###)\nsparse annotations within long documents that cause class imbalance issues Keshavarz et al. (2022  ###reference_b15###); Park et al. (2022  ###reference_b32###); Li et al. (2021  ###reference_b26###)\ncomplex tabular layout that must be considered to discriminate between similar labels Koleva et al. (2022  ###reference_b18###); Wang et al. (2023  ###reference_b40###); Landeghem et al. (2023  ###reference_b22###); Lehmberg et al. (2016  ###reference_b23###)\nvaried data types to be extracted: from simple dates and prices to long-form clauses Wang et al. (2021  ###reference_b39###)\nWe present RealKIE, a benchmark of five document-level key information extraction datasets with manual annotations. Three of the document sources we believe to be novel, while two expand upon the work of Stanisławek et al. (2021  ###reference_b36###). Included with the PDF documents are the full output of optical character recognition (OCR) and text span annotations indexed to that OCR output. In all cases, the fields extracted are meant to be representative of data extraction tasks in a particular role or industry vertical, e.g. accounts payable invoice processing or legal analysis of a contract. It is our hope that these new benchmarks will spark research into novel approaches to information extraction in real-world settings and drive the development of models and methods directly applicable to industry problems."
        },
        {
            "section_id": "2",
            "parent_section_id": null,
            "section_name": "Dataset Descriptions",
            "text": "This section is a summary of the datasets that compose RealKIE. Each subsection contains a description of the documents, example elements from the full sequence labeling schema, and summary statistics."
        },
        {
            "section_id": "2.1",
            "parent_section_id": "2",
            "section_name": "SEC S1 Filings",
            "text": "This dataset consists of 322 labeled S1 filings sourced from the Security and Exchange Commission’s (SEC) EDGAR data store SEC (2023  ###reference_b35###). The SEC requires domestic issuers to file an S1 prior to publicly offering new securities, most commonly as part of an initial public offering. While these documents are all required to contain certain sections (e.g. risk factors and the details of the securities offered) and are known as registration forms, there is a high degree of variability in the content within these sections and how that content is presented. While some filings are digital PDFs, other filings have been scanned prior to upload, which requires the extraction of the raw text via OCR. Furthermore, these documents are often lengthy and the schema that captures important data elements leads to sparse labeling. All of this makes them an ideal representative of a typical enterprise knowledge worker task. The full list of labels and their counts can be seen in Table 1  ###reference_###.\nThe labeling schema used for annotation is meant to mimic the activities of an investment analyst assessing whether to invest in a given offering. This includes summarizing high level risks by extracting risk factor statements. We have also included header fields for key sections like the prospectus summary and the detailed description of the securities.\nThe size of the documents in the S1 dataset results in practical challenges for benchmarking. To make our datasets as accessible as possible we have split the documents at the page level. Pages have been removed at random to balance the number of pages with and without labels and reduce the overall size of the dataset.\n###table_1###"
        },
        {
            "section_id": "2.2",
            "parent_section_id": "2",
            "section_name": "US Non-Disclosure Agreements (NDA)",
            "text": "This dataset contains 439 non-disclosure agreements submitted to EDGAR as a part of various types of required filings SEC (2023  ###reference_b35###). The raw documents were thoroughly presented in Stanisławek et al. (2021  ###reference_b36###), so we focus on our contributions. We include the same label schema as the original Kleister-NDA dataset Stanisławek et al. (2021  ###reference_b36###). This schema captures the types of data elements extracted in a legal setting, e.g. the parties involved, the effective date, and the jurisdiction of the contract. Furthermore, unlike the original annotations provided, we provide manually-labeled text span annotations referenced against the OCR extraction of the document text. While the original documents were in an HTML format, we use the PDFs that were shared as part of the Kleister NDA dataset Stanisławek et al. (2021  ###reference_b36###). Though we annotate only a trio of fields, this task proves challenging due to label sparsity. The full list of labels and their counts can be seen in Table 2  ###reference_###.\n###table_2###"
        },
        {
            "section_id": "2.3",
            "parent_section_id": "2",
            "section_name": "UK Charity Reports",
            "text": "This dataset contains 538 public annual reports filed by charities in the UK. The original source of the documents is the UK Charity Commission. Our document set contains partial overlap with Kleister-Charities documents Stanisławek et al. (2021  ###reference_b36###). Similar to those in Section 2.5  ###reference_###, these documents are lengthy, and while they all carry similar information, formatting varies significantly between documents. As such, they are representative of the types of documents a knowledge worker might scour for details in an audit or diligence setting.\nAs in the NDA dataset in Section 2.2  ###reference_###, this dataset was first compiled and modeled in Stanisławek et al. (2021  ###reference_b36###), so we focus on our contributions. The schema we have applied to these documents extends that of Kleister-Charities Stanisławek et al. (2021  ###reference_b36###). We include fields that capture information about the activites of the charity, including named charity events and the names and roles of trustees. These fields are particularly challenging due to their mixed data types and presentations within the document. Furthermore, unlike the original annotations provided, we provide text span annotations referenced against our own OCR extraction of the document text. The full list of labels and their counts can be seen in Table 3  ###reference_###.\n###table_3###"
        },
        {
            "section_id": "2.4",
            "parent_section_id": "2",
            "section_name": "FCC Invoices",
            "text": "This dataset consists of 370 labeled invoices that contain cost information from television advertisements placed by political campaigns on various local and regional broadcasters. These Federal Communication Commission (FCC) filings are required to be made public as part of U.S. political campaign disclosure policies FCC (2023  ###reference_b8###).\nAs with most invoices, they have a mixture of:\ndocument-level information, e.g. the agency placing the ad and the client on whose behalf it is being placed\nline-level information, e.g. the start/end dates of a billing period and the rate per spot\nsummary information, e.g. gross and net amounts invoiced\n.\nIn some sense, these documents are the most structured of all the documents presented here, i.e. highly tabular with clear headers and footers. However, the presentation varies considerably between broadcasters. In particular, table nesting and the format of certain data elements - the day of the week a spot ran, for example - makes both annotating these documents and modeling the annotations challenging. As such, this corpus represents the activities of a knowledge worker in accounts payable or accounts receivable tasked with extracting key details from invoices. The full list of labels and their counts can be seen in Table 4  ###reference_###.\n###table_4###"
        },
        {
            "section_id": "2.5",
            "parent_section_id": "2",
            "section_name": "Resource Contracts",
            "text": "This dataset consists of 198 labeled legal contracts specifying the details of agreements to explore for and exploit resources (typically oil and natural gas) in various parts of the world. These contracts specify the details of the geography to be explored/exploited, the dates of various project phases, revenue sharing agreements, and tax laws. The documents have been sourced from the Resource Contracts Online Repository, an open repository of global mining and petroleum contracts Natural Resource Governance Institute et al. (2023  ###reference_b31###).\nThese documents are challenging for a variety of reasons. First of all, while they all contain roughly the same information, their formats are highly varied. Second, they span many decades and the spectrum of visual quality, including text within images, machine text, and handwriting. As such, raw text extraction is often a difficult OCR task. Finally, even within a single document the same information may be presented in several different ways, making consistent labeling/extraction a challenge.\nOur labeling schema differs from the originals provided by Natural Resource Governance Institute et al. (2023  ###reference_b31###) and is meant to mimic the activities of an attorney attempting to perform diligence on a contract of this type. The full list of labels and their counts can be seen in Table 5  ###reference_###. At a high level, the annotated data elements fall into three categories:\npreamble fields, e.g. the named parties to a given contract or the date is was signed\nheader fields, i.e. the headings of key sections, meant to simplify navigation in and through a highly self-referential document\nclause fields, e.g. the obligations of a contractor with respect to environmental protections or the usage of naturally occurring water\n###table_5### ###table_6###"
        },
        {
            "section_id": "3",
            "parent_section_id": null,
            "section_name": "Document Processing",
            "text": "Each document enters our document processing pipeline as a PDF and is converted to images and processed by an OCR engine. Some documents come in as native or partially native PDFs, but for consistency every document goes through an OCR process. The OCR files, images and original files are all shared as part of the dataset. Any documents with duplicate text were removed.\nWe use two different pipelines to process the documents. For the OmniPage pipeline, we use OmniPage to both OCR and convert the PDF files to PNG Kofax (2023  ###reference_b17###). For the Azure Read OCR Pipeline we use Azure Computer Vision Read API (version 2021-04-12) Microsoft (2023  ###reference_b30###) to OCR the PDF and then PyPDFium to convert the files to PNGs Korobov (2023  ###reference_b20###). In both cases, rotation and de-skewing are applied according to the outputs of the OCR engines.\nOmniPage was used for all datasets with the exception of Resource Contracts. Qualitatively, OmniPage provides a consistent OCR output when documents are clean scans or native PDFs. The Resource Contracts files include shading and partial occlusion from poor-quality scans which were handled better by Azure’s Read OCR.\nThis simple document processing workflow plays an important role in our dataset preparation process. Through the implementation of an OCR pipeline, we establish consistency for subsequent stages"
        },
        {
            "section_id": "4",
            "parent_section_id": null,
            "section_name": "Description of Annotation Task",
            "text": "The majority of the annotation process is shared across RealKIE datasets. We start this section by detailing the common aspects, followed by a discussion on the dataset-specific variations. For additional insights into text annotation best practices, see Stollenwerk et al. (2023 ###reference_b37###). Prior to annotation, a set of slides was created to detail annotation expectations. Each label was allocated 1-2 slides to describe the label’s intent, provide a few positive examples, and document counter-examples that annotators should avoid labeling. During the annotation process these were amended as and when clarifications were required. It is important to note that in an industry setting time spent by document experts annotating documents is expensive. As such, each document is seen by only one annotator and helpful metrics like inner-annotator agreement are not available. We are mimicking this setting in the process described below.\n\nAI in healthcare for predictive analytics has garnered significant attention in recent years. Advanced machine learning models are increasingly being used to predict patient outcomes, potentially improving treatment plans and reducing costs (Lee and Yoon, 2022). These innovations hold promise for transforming healthcare delivery by offering tailored patient care strategies."
        },
        {
            "section_id": "4.1",
            "parent_section_id": "4",
            "section_name": "Annotation Interface",
            "text": "A commercial annotation interface was used for all phases of annotation Indico Data (2023  ###reference_b14###). The annotation interface provides a PDF-like UI for users to apply labels via a highlighting tool, which is crucial for tasks where spatial information is necessary for accurate annotation. This approach removes any ambiguities that may have been introduced by OCR, including issues related to recognition or reading order. In the case that the text of interest was not detected during the OCR phase, the label is necessarily omitted. This may have implications for modeling these datasets using OCR-Free approaches such as DocParser Dhouib et al. (2023  ###reference_b7###) or Donut Kim et al. (2022  ###reference_b16###), and may make fair comparison difficult for approaches that opt to re-OCR pages using a different OCR provider.\n\nAI in healthcare for predictive analytics has garnered attention, with models analyzing vast datasets for early detection and personalized treatment. Techniques such as machine learning and deep learning have been instrumental in predicting patient outcomes, improving diagnostics, and optimizing healthcare processes, thus enhancing patient care efficiency and effectiveness."
        },
        {
            "section_id": "4.2",
            "parent_section_id": "4",
            "section_name": "Annotation Process",
            "text": "The annotation process consisted of three main phases: initial annotation, model assisted annotation and quality review. In the realm of AI in healthcare for predictive analytics, substantial advancements have been made, leveraging machine learning algorithms to forecast patient outcomes, enhance diagnosis accuracy, and improve treatment efficacy. These innovations demonstrate significant potential in revolutionizing patient care."
        },
        {
            "section_id": "5",
            "parent_section_id": null,
            "section_name": "Baseline Procedure and Results",
            "text": "For RealKIE baselines, we finetune a number of different pretrained transformers with a token-classification formulation. Code to reproduce our baselines along with the Weights and Biases projects will be available shortly at https://indicodatasolutions.github.io/RealKIE/  ###reference_KIE/###\nFor each model and dataset combination, we ran a Hyperband Bayesian hyper-parameter search until 100 models had trained Li et al. (2018  ###reference_b25###); Biewald (2020  ###reference_b2###). We then select the model with the highest validation set F1.\nThe base models we use as baselines are RoBERTa-base, DeBERTa-v3-base, XDoc-base, LayoutLM-v3-base and Longformer-base Liu et al. (2019  ###reference_b27###); He et al. (2021  ###reference_b10###); Huang et al. (2022  ###reference_b13###); Beltagy et al. (2020  ###reference_b1###); Chen et al. (2022  ###reference_b4###). Details for these models can be found in Table 8  ###reference_###.\nWe used two different codebases to train these models, Hugging Face Transformers Wolf et al. (2020  ###reference_b42###) implementations were used for RoBerta, DeBERTa, Longformer and LayoutLM. The Finetune Library was used for XDoc and to re-run RoBERTa as a point of comparison May et al. (2023  ###reference_b29###). Sweep parameters for each are shown in Table 7  ###reference_###.f\nWhen training on long documents such as those presented here with sparse labels it is necessary to chunk the document into lengths determined by the context size of the model being trained Dai et al. (2019  ###reference_b5###). When training on long documents it can be helpful to undersample chunks without labels in order to improve recall and stabilise the loss by improving class balance against the background class Li et al. (2021  ###reference_b26###).\nFinetune includes a feature called \"Auto Negative Sampling\", which is a simple form of hard-negative mining Bucher et al. (2016  ###reference_b3###). Initially, a model is trained using only chunks within the document that contain a labeled span. Then, inference is run on this model and any chunks where false-positive predictions are present are included as negative samples in the final model train. For Hugging Face models we simply undersample negative chunks to a target ratio of labeled chunks to chunks without labels. This ratio is a parameter that is included in our hyperparameter search."
        },
        {
            "section_id": "5.1",
            "parent_section_id": "5",
            "section_name": "Hardware and Environmental Impact",
            "text": "Running the baselines resulted in an aggregate estimated equivalent CO2 of 766Kg using the methodology from Lacoste et al. (2019  ###reference_b21###). The authors believe that the impact is justified by producing baselines that are reliable-enough to be re-used in future work, without necessity for full reproduction. Full code and scripts for running baselines will be shared shortly.\n###table_7### ###table_8###"
        },
        {
            "section_id": "6",
            "parent_section_id": null,
            "section_name": "Analysis",
            "text": "###table_9### We provide a brief analysis of our baseline results on RealKIE with the aim of highlighting the challenges outlined in Section 1  ###reference_###.\nUnless relevant, when making direct comparisons between a pair of models we will compare results that have been trained on the same framework. This is to isolate the impact of any differences not accounted for in the hyper-parameter search. Frameworks used for each model can be seen in Table 8  ###reference_###."
        },
        {
            "section_id": "6.1",
            "parent_section_id": "6",
            "section_name": "Complex Layout and Text Serialization Issues",
            "text": "Many of the datasets have some component of layout that is likely to be important when solving the task. As seen in Table 8  ###reference_###, both LayoutLM and XDoc have 2D positional features that aim to improve performance on layout-rich documents such as these. Layout information is also believed to be important in tackling serialization issues that result from OCR reading order Huang et al. (2022  ###reference_b13###); Chen et al. (2022  ###reference_b4###). However, both layout models under-perform text-only models for all datasets except Charities.\nWe invite further work that attempts to determine whether these datasets simply do not require positional features, or whether the currently available base models are simply unable to exploit this property."
        },
        {
            "section_id": "6.2",
            "parent_section_id": "6",
            "section_name": "Sparse Annotations and Class Imbalance",
            "text": "###table_10### When formulated as a token-classification task, RealKIE datasets contain two primary modes of class imbalance, as shown in Table 10  ###reference_###.\nAs described in Section 5  ###reference_### our baselines include 3 approaches for handling these: class weighting, auto-negative-sampling and random-negative-sampling. The negative-sampling approaches directly counteract label sparsity whereas class-weights impacts both label sparsity and class-imblance.\nFinetune baselines include both class weighting and auto-negative-sampling in their hyperparameter sweeps. We can see in Table 11  ###reference_### that auto-negative-sampling is enabled for 4 / 5 of the best performing Finetune RoBERTa models. The exception is FCC Invoices which is shown in Table 10  ###reference_### to have no chunks without labels. We observe that the best performing RoBERTa models all have class weights applied.\nFinetune RoBERTa achieves a higher Macro F1 than Hugging Face RoBERTa on 4 / 5 datasets. Including a difference of 4.0 F1 for Charities. Although we have not isolated all differences between Hugging Face and Finetune’s RoBERTa baselines, it seems likely that handling of imbalances play a large part in these differences. We invite future work to isolate the effects of managing class imbalance on these baselines."
        },
        {
            "section_id": "6.3",
            "parent_section_id": "6",
            "section_name": "Context Length",
            "text": "The average length of each of the datasets (shown in Table 6  ###reference_###) is longer than the 512 context length used by most of our baseline models. Truncating is not a viable option due to the labels being distributed throughout the document.\nLongformer is a RoBERTa-based model that has undergone secondary pretraining to extend the context length to 4096 tokens. Comparing RoBERTa-base (Hugging Face) to Longformer-Base we can compare the impact of this secondary pretraining and additional context length. We can see that in 4/5 cases longformer outperforms RoBERTa and in the remaining case (NDA) longformer is within 0.5 F1 points of RoBERTa base. The largest difference can be seen on the Resource Contracts dataset with 4.6 F1 points separating RoBERTa and Longformer, suggesting that context length is advantageous for these datasets."
        },
        {
            "section_id": "6.4",
            "parent_section_id": "6",
            "section_name": "Baseline Summary",
            "text": "Overall, we can see that Deberta-v3 is the best overall model that we evaluated and provides a strong and simple baseline. For comparable models, negative sampling, long context and class weights provide clear improvements. For all datasets except Charities, no measurable improvement was seen from using 2D positional models. Improving on these approaches and the remaining challenges outlined in Section 1  ###reference_### are left to future work."
        },
        {
            "section_id": "7",
            "parent_section_id": null,
            "section_name": "Conclusions",
            "text": "In this paper we have introduced RealKIE, a benchmark of five document datasets. These documents and the associated tasks are faithful representations of many of the challenges that knowledge workers face when automating data extraction:\npoor document quality, leading to OCR artifacts and poor text serialization\nsparse annotations within long documents that cause class imbalance issues\ncomplex tabular layout that must be considered to discriminate between similar labels\nvaried data types to be extracted: from simple dates and prices to long-form clauses\nOur baselines indicate that characteristics such as long-context, class balance, and label sparsity are effectively leveraged by existing methods. However, we demonstrate that layout models require further work to apply successfully to this benchmark.\nModels or frameworks that can improve upon the benchmarks presented here (by being robust to these common difficulties) would represent a major step forward in real-world information extraction technologies. It is our hope that RealKIE will be a reusable test bed for such advances."
        },
        {
            "section_id": "8",
            "parent_section_id": null,
            "section_name": "Acknowledgments",
            "text": "We would to acknowledge, by name, the substantial effort expended by our labeling team to produce high quality labels for these difficult datasets; many thanks to Ash Sloban, Jay Morgan, Lavi Sanchez, Melissa Cano, Sarah Magnant, Sidney More, Mackenzie Dwyer, and Donna Waltz.\n###table_11### Auto Negative Sampling\nMax Empty Chunk Ratio\nLearning Rate\nBatch Size\nNum Epochs\nClass Weights\nLR Warmup\nCollapse Whitespacee\nMax Grad Norm\nL2 Regularization\nGradient Accumulation Steps\nLR Schedule"
        }
    ]
}