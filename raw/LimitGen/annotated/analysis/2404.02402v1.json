{
    "title": "Token Trails: Navigating Contextual Depths in Conversational AI with ChatLLM",
    "abstract": "Conversational modeling using Large Language Models (LLMs) requires a nuanced understanding of context to generate coherent and contextually relevant responses. In this paper, we present Token Trails, a novel approach that leverages token-type embeddings to navigate the intricate contextual nuances within conversations. Our framework utilizes token-type embeddings to distinguish between user utterances and bot responses, facilitating the generation of context-aware replies. Through comprehensive experimentation and evaluation, we demonstrate the effectiveness of Token Trails in improving conversational understanding and response generation, achieving state-of-the-art performance. Our results highlight the significance of contextual modeling in conversational AI and underscore the promising potential of Token Trails to advance the field, paving the way for more sophisticated and contextually aware chatbot interactions.\nModel and source code available at: huggingface.co/Kowsher/TokenTrails.",
    "sections": [
        {
            "section_id": "1",
            "parent_section_id": null,
            "section_name": "Introduction",
            "text": "Conversational agents, including chatbots and virtual assistants, have become integral to our daily digital interactions, offering a range of services from customer support to personal companionship as shown by Allouch et al. (2021  ###reference_b2###). The ability of these agents to understand and respond to user queries in a coherent and contextually relevant manner is paramount for their effectiveness, Huang et al. (2023  ###reference_b14###) Khennouche et al. (2023  ###reference_b15###). Despite significant advancements in natural language processing (NLP) and machine learning, creating conversational agents that can seamlessly engage in human-like dialogue remains a formidable challenge, McTear and Ashurkina (2024  ###reference_b22###) Xi et al. (2023  ###reference_b28###); Kowsher et al. (2019d  ###reference_b19###).\nOne of the critical hurdles in enhancing conversational AI is the model’s ability to distinguish between interlocutor roles within a dialogue, specifically identifying user utterances and bot responses Deriu et al. (2021  ###reference_b9###), Skantze (2021  ###reference_b25###). This differentiation is essential for generating replies that are not only relevant to the immediate query but also coherent with the entire conversation history. Traditional approaches often treat the dialogue as a continuous sequence of text without explicitly modeling the dynamic interplay between user and bot contributions, Feng et al. (2020  ###reference_b11###); Kowsher et al. (2019c  ###reference_b18###) Huang et al. (2020  ###reference_b13###). This can lead to responses that, while grammatically correct, may lack context sensitivity and fail to advance the conversation in a meaningful way.\nIn this work, we propose a novel approach that leverages token-type embeddings to explicitly differentiate between user utterances and bot responses within the conversation (described in Figure 1  ###reference_###). This method enables the conversational model to maintain a clearer distinction between the perspectives of the dialogue participants, thereby enhancing its ability to generate context-aware replies. By integrating token type embeddings with existing language models, we aim to improve the coherence and relevance of bot-generated responses, bringing us closer to the goal of creating conversational agents that can engage in genuinely human-like dialogue.\nOur contributions are as follows:\nWe introduce a novel framework for conversational AI that incorporates token type embeddings to distinguish between user utterances and bot responses, enhancing the model’s context-awareness.\nWe demonstrate, through extensive experiments, that our approach significantly outperforms traditional models in generating coherent and contextually relevant responses.\nWe provide a comprehensive analysis of how token type embeddings contribute to the improved performance of conversational agents, offering insights that can inform future research in the field.\nThe remainder of this paper is organized as follows: Section 2 reviews related work in the domain of conversational AI and the role of embeddings in improving dialogue systems. Section 3 details the problem definition and objective. Section 4 details our proposed methodology, including the architecture of our model and the implementation of token-type embeddings. Section 5 presents our experimental setup, datasets used, evaluation metrics, and in-depth analysis of our model’s performance compared to baseline methods. Finally, Section 6 concludes the paper with a summary of our findings and outlines potential directions for future research."
        },
        {
            "section_id": "2",
            "parent_section_id": null,
            "section_name": "Related Work",
            "text": "Language Models (LLMs) have witnessed remarkable advancements in recent years, fundamentally reshaping the landscape of natural language understanding and generation. The inception of this transformative era can be traced back to the introduction of models like Devlin et al. (2019  ###reference_b10###) and Brown and et al. (2019  ###reference_b4###), which laid the foundation for pre-trained neural architectures capable of learning intricate language representations. Building upon this foundation, subsequent research has delved into adapting LLMs for various natural language processing tasks. In the context of dialogue systems, the development of conversational LLMs has been particularly significant. Zhang and et al. (2020  ###reference_b31###) and Adiwardana and et al. (2021  ###reference_b1###) are prominent examples of models designed explicitly for generating context-aware and coherent responses in human-like conversations.\nChatbots, a manifestation of conversational AI, have a rich history marked by periods of innovation. Early chatbots, like Weizenbaum (1966  ###reference_b27###) , provided rudimentary text-based interactions, primarily relying on pattern matching and scripted responses. Subsequent decades saw advancements in rule-based and template-based chatbots, such as Ando and Zhang (2005  ###reference_b3###); Kowsher et al. (2019a  ###reference_b16###, b  ###reference_b17###), before the emergence of data-driven approaches. The rise of neural conversational models, fueled by deep learning techniques, has reshaped the chatbot landscape. Modern chatbots leverage LLMs to generate contextually relevant and coherent responses in real-time conversations. OpenAI’s GPT-3\nBrown and et al. (2020  ###reference_b5###) is a groundbreaking example, demonstrating the capability to perform a wide range of natural language tasks, including chatbot functionality.\nThis section outlines the progression of LLMs and chatbots, setting the stage for the discussion of recent advancements and challenges in the domain of conversational AI.\n###figure_1###"
        },
        {
            "section_id": "3",
            "parent_section_id": null,
            "section_name": "Problem Definition",
            "text": "Given a conversation sequence, our aim is to leverage token type embeddings to differentiate between user utterances and bot responses, enabling the model to generate context-aware replies. We now formally define the problem and related notations."
        },
        {
            "section_id": "3.1",
            "parent_section_id": "3",
            "section_name": "Notations",
            "text": "- A sequence of user utterances.\n- A sequence of bot responses.\n- Token type embeddings corresponding to the concatenated sequence of user utterances and bot responses.  is 0 for user utterances and 1 for bot responses.\n- A sequence of position of each token"
        },
        {
            "section_id": "3.2",
            "parent_section_id": "3",
            "section_name": "Objective",
            "text": "Let consider, we have given a user utterance  and the history of conversation context  where  and  , the goal is to generate a response  such that it is coherent and contextually relevant to  and . Our model can be framed as:\nWhere  represents the probability of the bot’s response  given the current user utterance , the conversation history .\nFor each training instance, the model is provided with a sequence  formed by concatenating a subset of user utterances and bot responses from the history, followed by the current user utterance. The target for this instance is the corresponding bot response.\nUsing this methodology, the model is trained to generate responses that are not only appropriate to the current utterance but also aligned with the conversational history."
        },
        {
            "section_id": "4",
            "parent_section_id": null,
            "section_name": "Conversation-aware Pre-training",
            "text": "Given a conversation, we represent it as a sequence of tokens from user utterances and bot responses. For a given conversation  with  user utterances and  bot responses be represented as:\notherwise"
        },
        {
            "section_id": "4.1",
            "parent_section_id": "4",
            "section_name": "Token Type Embeddings",
            "text": "Each token in  is associated with a token type, which discerns user utterances from bot responses. The token type vector  is defined as:  with\nEach token’s embedding in the conversation is then enhanced by combining its word embedding with its token type embedding. Given the word embedding matrix , position Embedding  and token type embedding matrix , the final embedding  can be defined as:\nHere  and  is embedding dimension of each token."
        },
        {
            "section_id": "4.2",
            "parent_section_id": "4",
            "section_name": "Training Strategy",
            "text": "Training samples are created by truncating the conversation at different bot responses and then using the conversation history as context to predict the next bot response.\nAfter obtaining the embedding, denoted as , it is fed into our model , which generates the output response sequence denoted as .\nThe objective of the model is to minimize the cross-entropy loss between the predicted response sequence  and the actual response sequence . The cross-entropy loss  for the -th sample is calculated as:\nHere  is the length of the actual response sequence ,  is the vocabulary size,  is the one-hot encoding of the -th token at position  in , and  is the predicted probability of the -th token at position  in .\nThe overall loss for a batch of samples is the mean of individual sample losses:\nWhere  is the number of samples in the batch."
        },
        {
            "section_id": "5",
            "parent_section_id": null,
            "section_name": "Experiments",
            "text": ""
        },
        {
            "section_id": "5.1",
            "parent_section_id": "5",
            "section_name": "Baseline Models",
            "text": "In the domain of dialogue response generation and commonsense reasoning, our study is positioned against a spectrum of baseline methodologies that embody the spectrum of current research. Ghosal et al. (2020  ###reference_b12###) introduces a method leveraging contextual embeddings to improve dialogue response generation. The approach focuses on capturing the nuances of conversational context to generate more relevant and coherent responses. Shen et al. (2021  ###reference_b24###) explores a multi-task learning framework that simultaneously addresses emotion detection in conversations and dialogue response generation. By integrating these tasks, the model achieves improved performance in generating emotionally aware responses. Kwak et al. (2023  ###reference_b20###) presents a novel framework that generates context-dependent instructions for dialogue response generation. It employs a multi-task learning approach, where the model learns to generate both instructions and responses, enhancing the diversity and coherence of generated dialogue.Chen et al. (2022  ###reference_b7###) introduces a pre-trained latent variable model for dialogue generation, incorporating continuous latent variables into the enhanced encoder-decoder framework to increase the relevance and diversity of responses.Chae et al. (2023  ###reference_b6###) proposes a dialogue chain-of-thought (CoT) reasoning framework that distills knowledge from large language models (LLMs) to generate high-quality CoT rationales for dialogue response generation. It introduces DOCTOR, a model that significantly improves response quality by integrating these rationales.\nGhosal et al. (2020  ###reference_b12###), Kwak et al. (2023  ###reference_b20###) and Chae et al. (2023  ###reference_b6###) emphasize the importance of context in generating dialogue responses. While Ghosal et al. (2020  ###reference_b12###) uses contextual embeddings, Kwak et al. (2023  ###reference_b20###) devises context-dependent instructions, and Chae et al. (2023  ###reference_b6###) focuses on multi-hop commonsense reasoning.\nEach work introduces a distinct methodological innovation—Shen et al. (2021  ###reference_b24###)’s multi-task learning framework,Chen et al. (2022  ###reference_b7###)’s continuous latent variable model, and Chae et al. (2023  ###reference_b6###)’s knowledge distillation approach for dialogue CoT reasoning stand out for their novel contributions to enhancing dialogue systems.\nKwak et al. (2023  ###reference_b20###) and Chen et al. (2022  ###reference_b7###) collectively highlight the importance of improving the diversity and coherence of dialogue responses, with Kwak et al. (2023  ###reference_b20###) utilizing instruction-based generation and Chen et al. (2022  ###reference_b7###) employing a latent variable model to achieve these objectives.\nChen et al. (2022  ###reference_b7###) and Chae et al. (2023  ###reference_b6###) both leverage the capabilities of LLMs but for different purposes. While Chen et al. (2022  ###reference_b7###) integrates continuous latent variables with LLMs for dialogue generation, Chae et al. (2023  ###reference_b6###) distills knowledge from LLMs to generate CoT rationales for more reasoned responses."
        },
        {
            "section_id": "5.2",
            "parent_section_id": "5",
            "section_name": "Model and Hyper-parameter setting",
            "text": "In this paper, we focus on improving language models for better performance. We use the Falcon-7B architecture as our base model and add a LORA adaptation layer with rank 32. This helps the model handle complex language tasks more effectively.\nThe Falcon-7B model is known for its ability to process large datasets accurately and quickly. By adding LORA, we fine-tune the model’s parameters in low ranking to make learning more efficient in computational cost and effectiveness.\nChoosing the right hyperparameters is crucial for getting the best results. We set the alpha parameter in LORA to 0.7 to balance how the model pays attention to different parts of the input. This helps the model learn better, especially across diverse datasets.\nFor training, we use the AdamW optimizer with specific settings to ensure stable and efficient learning. We start with a learning rate of 2e-5, warm up for 10% of training, and then gradually decrease the learning rate using a cosine decay schedule.\nDuring training, we expose the model to different language examples using a batch size of 8 and include 0.1 dropouts to prevent overfitting."
        },
        {
            "section_id": "5.3",
            "parent_section_id": "5",
            "section_name": "Datasets",
            "text": "Pretraining Dataset\nTo effectively train our model for conversational understanding, we curated a comprehensive dataset through the generation of simulated dialogues. This dataset was meticulously compiled using two advanced language models: GPT-4 and Gemnai. Our dataset encompasses a wide array of subjects, including but not limited to Movies, Music, Culture, and Travel, reflecting a rich diversity in conversation topics.\nIn total, our dataset comprises 500,000 entries, segmented into 8,000 unique conversations. These conversations showcase an average interaction sequence of 62 turns between a user and an agent, illustrating the depth and complexity of the dialogues captured.\nFurthermore, recognizing the paramount importance of maintaining a safe and respectful conversational environment, we dedicated a portion of our dataset specifically, an additional 2,000 entries—to include scenarios that address and neutralize inappropriate dialogues, such as those involving sexual content or medical advice. This proactive approach ensures our model is not only diverse in its understanding of various subjects but also equipped to handle sensitive topics with the appropriate level of caution and respect.\nDailyDialog is a collection of human-to-human conversations representing everyday communication scenarios. It covers dialogues on various themes relevant to daily life, with each utterance annotated for emotion and act labels, providing a realistic portrayal of natural discourse. DailyDialog consists of over 13,000 dialogues, with a focus on neutral-toned conversations, making it suitable for a broad range of tasks Li et al. (2017  ###reference_b21###).\nEmoryNLP is based on the TV series \"Friends\" and is designed for evaluating emotion recognition in conversations. It offers fine-grained emotional annotations across categories such as joy, sadness, anger, and neutral. With annotations from over 1,000 dialogues, EmoryNLP facilitates the study of emotional dynamics in multi-party interactions Zahiri and Choi (2017  ###reference_b29###).\nMELD originates from the sitcom \"Friends\" and serves as a resource for multimodal emotion recognition and sentiment analysis. With over 1,400 dialogues and approximately 13,800 annotated utterances, MELD captures diverse emotional expressions and interpersonal dynamics within the show Poria et al. (2018  ###reference_b23###).\nPersonaChat provides conversation logs accompanied by persona profiles, fostering the development of personalized dialogue systems. It contains thousands of dialogues, each paired with persona descriptions, enabling models to generate contextually relevant responses aligned with given persona traits Zhang et al. (2018  ###reference_b30###).\nDREAM is a challenge set for dialogue-based reading comprehension, featuring multiple-choice questions derived from dialogues. With over 6,000 dialogues and 10,000 questions, DREAM tests models’ comprehension abilities by requiring them to select correct answers from given options based on conversation context Sun et al. (2019  ###reference_b26###).\nMuTual focuses on dialogue-based reading comprehension in multi-turn interactions. It comprises over 8,000 dialogues and more than 32,000 questions, emphasizing mutual understanding and reasoning within dialogues, challenging models to follow conversation flow and apply common sense reasoning Cui et al. (2020  ###reference_b8###)."
        },
        {
            "section_id": "5.4",
            "parent_section_id": "5",
            "section_name": "Results",
            "text": ""
        },
        {
            "section_id": "5.5",
            "parent_section_id": "5",
            "section_name": "Pretraining Performance",
            "text": "In this study, we divided the dataset into training (70%), validation (10%), and test (20%) parts for pretraining. The results from pretraining the Falcon-7B model on our conversational datasets showed significant improvements when we added Token Embedding. Specifically, the enhanced model outperformed the base Falcon 7B model across all metrics on the test dataset described in the Table 1  ###reference_###. For example, with Token Embedding, we saw increases in METEOR from 30.4 to 33.5, BLEU-2 from 13.4 to 16.2, BLEU from 8.2 to 9.6, ROUGE-L from 32.5 to 36.2, and ROUGE-2 from 13.6 to 15.8. These improvements highlight the effectiveness of integrating Token Embedding with the Falcon 7B model, indicating enhanced conversational understanding and generation capabilities."
        },
        {
            "section_id": "5.7",
            "parent_section_id": "5",
            "section_name": "Chat Performance Analysis",
            "text": "By following this work Context-dependent Instruction Tuning Kwak et al. (2023  ###reference_b20###), we have measured the chat performance\nWe assessed chat performance following the methodology of Context-dependent Instruction Tuning (Kwak et al., 2023  ###reference_b20###). Table 3  ###reference_### presents BLEU-1, BLEU-2, Distinct-1, and Distinct-2 scores for various models across DailyDialog and PersonaChat datasets. Notably, Falcon, with and without Token Embedding, exhibited the highest performance on both datasets, surpassing other models in terms of BLEU and Distinct metrics. For instance, Falcon + Token Embedding achieved BLEU-1 scores of 0.515 and 0.520, BLEU-2 scores of 0.438 and 0.410, and Distinct-1 scores of 0.063 and 0.034 on DailyDialog and PersonaChat, respectively. These results underscore the effectiveness of incorporating Token Embedding in improving chat performance, as evidenced by the significant improvements across all evaluated metrics and datasets."
        },
        {
            "section_id": "6",
            "parent_section_id": null,
            "section_name": "Conclusion",
            "text": "In this study, we have presented the ChatLLM framework, which utilizes Token Trails to enhance conversational understanding and response generation. Through extensive experimentation and evaluation, we have demonstrated the effectiveness of Token Trails in navigating the complex contextual depths within conversations. Our framework achieves state-of-the-art performance, outperforming existing models in terms of coherence and contextuality in responses. By leveraging token type embeddings, ChatLLM generates context-aware replies, paving the way for more sophisticated and engaging chatbot interactions. Our findings underscore the importance of contextual modeling in conversational AI and highlight the promising potential of Token Trails in advancing the field. In future work, we aim to explore additional avenues for improving context-awareness in conversational systems and further refining the capabilities of ChatLLM."
        }
    ]
}