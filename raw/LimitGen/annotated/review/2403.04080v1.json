{
    "title": "Transformers and Language Models in Form Understanding: A Comprehensive Review of Scanned Document Analysis",
    "abstract": "This paper presents a comprehensive survey of research works on the topic of form understanding in the context of scanned documents. We delve into recent advancements and breakthroughs in the field, highlighting the significance of language models and transformers in solving this challenging task. Our research methodology involves an in-depth analysis of popular documents and forms of understanding of trends over the last decade, enabling us to offer valuable insights into the evolution of this domain. Focusing on cutting-edge models, we showcase how transformers have propelled the field forward, revolutionizing form-understanding techniques. Our exploration includes an extensive examination of state-of-the-art language models designed to effectively tackle the complexities of noisy scanned documents. Furthermore, we present an overview of the latest and most relevant datasets, which serve as essential benchmarks for evaluating the performance of selected models. By comparing and contrasting the capabilities of these models, we aim to provide researchers and practitioners with useful guidance in choosing the most suitable solutions for their specific form understanding tasks.",
    "sections": [
        {
            "section_id": "1",
            "parent_section_id": null,
            "section_name": "Introduction",
            "text": "Digitization has become ubiquitous in various aspects of our lives, where physical objects like music discs and analog documents are being replaced with digital, machine-readable counterparts. This transformation enables downstream applications and historical preservation through efficient storage in databases [1  ###reference_b1###, 2  ###reference_b2###, 3  ###reference_b3###].\nAmong the crucial tasks in digitization, extracting form information from scanned documents stands out as a critical challenge. Digitizing form documents is non-trivial due to their inherent complexity, including intricate structures, non-textual elements like graphics, and combinations of hand- and machine-written content [4  ###reference_b4###, 5  ###reference_b5###, 6  ###reference_b6###]. Moreover, scanned documents may suffer from noise, resulting in unclear or distorted images, further complicating the form extraction process. This survey paper focuses on the methodologies employed for extracting form information from noisy scanned documents.\nDocument understanding [6  ###reference_b6###, 7  ###reference_b7###, 8  ###reference_b8###, 9  ###reference_b9###] is the field of analyzing the content and structure of documents with various formats and modalities, such as text, images, tables, and graphs. Language models and transformers [10  ###reference_b10###] are advanced neural network architectures that have demonstrated remarkable capabilities in various natural language processing tasks, as well as computer vision and audio processing tasks. The transformative potential of these models in document understanding has been widely recognised [11  ###reference_b11###].\nForm understanding is essentially a sequence-labeling task akin to named entity recognition (NER), often referred to as key information extraction (KIE) [12  ###reference_b12###]. The task poses unique challenges due to the diverse shapes and formats in which these documents appear (see Fig 1  ###reference_### for examples). Unlike traditional NER tasks that deal with 1D text information, form understanding involves multiple modalities. In addition to textual information, the position and layout of text segments play a vital role in semantic interpretation. An effective language model for form understanding must comprehend document entities within the context of multiple modalities and adapt to various types of document formatting.\nOne of the challenges in form understanding is the integration of visual information from scanned documents. Vision-language models, such as ViT (Vision Transformer) [13  ###reference_b13###, 14  ###reference_b14###] and CLIP (Contrastive Language–Image Pretraining)[15  ###reference_b15###] have demonstrated the potential to bridge the gap between text and images. These models enable the understanding of visual elements within the context of textual content, offering new ways for improved form understanding. Transformer-based models [16  ###reference_b16###, 17  ###reference_b17###] belong to a type of deep learning approach that is very effective in a wide range of natural language processing [18  ###reference_b18###, 19  ###reference_b19###] and computer vision [20  ###reference_b20###, 21  ###reference_b21###] tasks. In the domain of form understanding, Transformer models have been particularly transformative. They excel in interpreting the complex, often unstructured data found in forms and documents, thanks to their ability to capture contextual relationships in text. For instance, BERT’s bidirectional training mechanism enables it to understand the context of a word based on its surrounding text, which is crucial in deciphering the semantics of information in forms.\nThe key feature of these models is the use of self-attention mechanisms, which enables them to effectively weigh the importance of different parts of the input when making predictions. This allows for understanding the context of a given question and providing a relevant answer.\nA notable example of the fusion of language models and transformers in document understanding is the LayoutLM model [22  ###reference_b22###]. This model extends BERT by incorporating layout information, enabling it to consider the spatial arrangement of tokens in addition to their textual context. LayoutLM demonstrated superior performance in tasks like document image classification and form understanding, where both textual and spatial information are crucial.\nIt is a challenging and important problem in the field of document analysis and understanding. While there are several surveys that cover general aspects of document understanding and layout analysis [23  ###reference_b23###, 24  ###reference_b24###], as well as specific topics such as visual document analysis [25  ###reference_b25###], Camera-based analysis of text and documents [26  ###reference_b26###], and deep learning for document image understanding [27  ###reference_b27###], there is currently no comprehensive survey focusing specifically on the task of form understanding. Our survey bridges this gap and provides an extensive overview of recent technologies dedicated to the form understanding task.\nThe main contributions of this paper can be summarized as follows:\nComprehensive survey of recent advancements in form understanding for scanned documents, highlighting the role of language models and transformers.\nRigorous methodology for literature collection, encompassing historical evolution of form understanding methodologies and specialized techniques.\nIn-depth analysis of cutting-edge transformer models, focusing on their effectiveness in handling noisy scanned documents.\nOverview of essential datasets serving as benchmarks for evaluating model performance. Identification of research gap and contribution through a dedicated form understanding survey.\nThe structure of our paper is as follows: In Section 2  ###reference_###, we present our research methodology, detailing how we collected and curated papers for this survey. Section 3  ###reference_### provides an in-depth exploration of previously employed methods in the domain of form and document understanding. We delve into different approaches to address form understanding in noisy scanned documents in Section 4  ###reference_###. In Section 5  ###reference_###, we describe commonly used datasets, which serve as the foundation for comparing various approaches. The comparative analysis is presented in Section 6.2  ###reference_###. Finally, we offer an outlook on potential future directions and conclude in Section 7  ###reference_###.\n###figure_1###"
        },
        {
            "section_id": "2",
            "parent_section_id": null,
            "section_name": "Literature Collection Methodology",
            "text": "To ensure the comprehensiveness of our survey, we employed a rigorous methodology for collecting relevant literature in the field of form understanding in noisy scanned documents. Our goal was to cover recent advancements and capture the latest trends in this rapidly evolving domain.\nWe conducted searches in prominent scientific databases, namely Scopus, on Aug 6th, 2023. The search query was designed to be comprehensive, combining relevant terms to target the topic effectively: \"document understanding\" AND \"form\" OR \"information extraction\" AND \"Invoices\"). By incorporating \"document understanding\" AND \"form\" in the search string, we ensured a strong connection between the topics of form understanding and document understanding.\nThe search results revealed substantial publication numbers across the databases. Springer Link returned the highest number of publications (162), with 50 of them published in 2021 alone. ACM yielded 75 relevant publications, with a noticeable increase in publications after 2018. IEEE returned 8 relevant publications.\nIn addition to the initial search results, we included the LayoutLMv2 approach [28  ###reference_b28###] as it represented one of the state-of-the-art models during our survey’s timeline.\nTo ensure the thoroughness of our literature collection, we employed the backward-snowballing method on the initially collected papers. This approach helped us identify additional relevant papers that may not have appeared in the initial search results. Through this process, we selected the publications that showcased the latest advances in form understanding and introduced datasets dedicated to form understanding or document understanding as a whole.\nThe chart shown in Figure 2  ###reference_### depicts the number of relevant publications per year. The x-axis represents the years from 2014 to 2023, while the y-axis denotes the count of publications. The bars provide a clear visual representation of the distribution of relevant literature over the years, with a notable surge in publications from 2019 to 2022.\nAs illustrated in Figure 2  ###reference_###, the majority of the relevant literature emerged within the last three years. This trend aligns with the rise in popularity of the topic, primarily driven by the introduction of pre-trained language models like BERT [24  ###reference_b24###].\nOur literature collection methodology ensures the inclusion of recent breakthroughs and facilitates a comprehensive survey that captures the most current state of form understanding in noisy scanned documents. The selected papers will serve as the foundation for the subsequent sections of this survey, where we delve into various approaches, datasets, and comparisons to shed light on the advancements in this vibrant research area.\n###figure_2###"
        },
        {
            "section_id": "3",
            "parent_section_id": null,
            "section_name": "Early Approaches in Document Understanding",
            "text": "The evolution of document understanding witnessed the use of early models, predominantly based on rule-based algorithms. These methods can be broadly categorized into top-down and bottom-up approaches, each with its strengths and limitations [29  ###reference_b29###, 30  ###reference_b30###, 24  ###reference_b24###].\nTop-down approaches, being efficient and effective, operate well when the document structure is fixed and well-defined. Typically, this method requires a high-level description of the logical structure of the document. However, its limitations become evident in scenarios with complex and varied document layouts. Therefore, top-down approaches are best suited for situations where document structures are known in advance.\nOn the other hand, bottom-up approaches are more time-consuming but offer the capability to analyze previously unknown document structures. These methods analyze the image to extract connected components, progressively merging them into coherent blocks (e.g., characters to words, words to lines, lines to paragraphs). The bottom-up strategy is more versatile, making it suitable for handling diverse document layouts, but it comes at the cost of increased computational overhead.\nForm document processing, in particular, has seen the development of specialized methods based on form description [31  ###reference_b31###, p. 1941]. Researchers have explored form description languages (FDL) to represent the layout and logical structure of form documents using rectangular regions [29  ###reference_b29###, 32  ###reference_b32###, 31  ###reference_b31###]. FDL enables a comprehensive representation of the geometric and logical aspects of form documents, facilitating their automated processing.\nFor document understanding in general, earlier techniques included tree transformation to represent multi-article documents and the utilization of form definition languages [31  ###reference_b31###, p. 1939]. Tree transformations aimed to organize document content into a logical tree structure, aiding in content categorization and extraction. For instance, the separation of a document into header and body blocks involves labeling each block according to its type and then moving the blocks in the tree structure based on predefined rules.\nThese older models paved the way for document understanding, offering valuable insights and techniques that laid the foundation for subsequent research. However, the limitations of rule-based approaches and the demand for higher accuracy and adaptability led to the development of more sophisticated methods, including the recent advancements we explore in the subsequent sections of this survey."
        },
        {
            "section_id": "4",
            "parent_section_id": null,
            "section_name": "Multi-Modal Transformer Approaches",
            "text": "In recent years, the trajectory of models in the document understanding domain has been characterized by a paradigm shift towards enriching transformer-based architectures with additional modalities beyond text. This evolution has led to breakthroughs in capturing layout, formatting, and contextual cues present in scanned documents.\nThis section introduces a series of significant models that have emerged in recent years, contributing to the advancement of document understanding. We present these models chronologically, illustrating their innovative integration of multi-modal information and their unique contributions to the field. A comprehensive overview of the covered models, including the modalities they leverage and the types of approaches they embody, is provided in Table 1  ###reference_###."
        },
        {
            "section_id": "4.2",
            "parent_section_id": "4",
            "section_name": "Graph-Based Models",
            "text": "Graph-Based Text Relationship Modeling is a technique that employs graph neural networks (GNNs) to capture intricate relationships between text segments in documents. GNNs can process data that can be represented as graphs, such as nodes and edges333https://distill.pub/2021/gnn-intro/  ###reference_###444https://en.wikipedia.org/wiki/Graph_neural_network  ###reference__network###. These models use an encoder to process both textual and visual features, followed by a graph module that constructs a soft adjacency matrix to represent pairwise relationships between segments. This approach is particularly effective for capturing long-range dependencies and context in documents with complex textual interactions, such as relation extraction and entity linking [37  ###reference_b37###, 38  ###reference_b38###].\nPICK [39  ###reference_b39###] uses text and layout features in conjunction with a graph learning module to capture relationships between text segments.\nThe architecture of PICK555https://github.com/wenwenyu/PICK-pytorch  ###reference_### is built on three separate modules:\nThe encoder module takes the original document as input. For each sentence of a document, the input vector consists of the text embeddings of characters, the bounding box, and the image embedding. Text segments are encoded using a transformer [40  ###reference_b40###] and image segments are encoded using a pre-trained ResNet CNN [41  ###reference_b41###]. The text and image features are then combined by element-wise addition.\nThe graph module takes the combined representation of the encoder module and layout bounding boxes of the original document as input. It is trained to generate a soft adjacent matrix that captures pairwise relationships between two graphs nodes.\nThe usage of graph learning allows this model to capture long-distance relationships between text segments, which is traditionally a problem for transformer-based language models.\nThe decoder module that takes both the results of the encoder and the results of the graph module as input and forms the final output. The decoder uses a bidirectional long short-term memory network (BiLSTM) and a conditional random field algorithm (CRF) to perform sequence tagging on the union non-local sentence at a character level.\nThe Text Reading and Information Extraction (TRIE) model [42  ###reference_b42###] is unique in that the usually separated tasks of text-reading and text-understanding are fused into an end-to-end trained network. The general assumption is that both tasks can mutually benefit from each other during pre-training. The model consists of a text-reading module, a multi-modal context block and an information-extraction module. The text-reading module uses a ResNet CNN [43  ###reference_b43###] in combination with a Feature Pyramid Network (FPN) [44  ###reference_b44###] to extract the convolutional features  for an input image. This image embedding is passed to a  function (usually anchor-based or segmentation-based approaches), which determines possible text regions  as bounding boxes. The regions  are fused with the image features  using RoIAlign [45  ###reference_b45###] to get the text-region (or visual) features . Each  is fed into an encoder/decode model to produce the corresponding characters  where  is the length of the label sequence. These textual features are represented in textual feature vector  which is used together with visual feature vector  for information extraction. The multi-modal context block fuses textual, positional, and visual features created by the previous task. It makes use of a multi-head self-attention mechanism for the text embeddings, creating a text-context vector . The information extraction module uses the text-context  and the visual context  to separate entities and the text-embedding  to extract their entity values. First, the final context vector  is created as a weighted sum of the context vectors  and . This fused context vector is concatenated with the text-embedding, and the final feature vector is passed to bidirectional LSTM."
        },
        {
            "section_id": "4.3",
            "parent_section_id": "4",
            "section_name": "Multi-Modal Fusion Models",
            "text": "Multi-Modal Transformer Approaches are a type of large models that advance the fusion of modalities by introducing novel mechanisms to better integrate text, layout, and visual information. These models often propose modifications to the transformer architecture, such as spatial-aware self-attention mechanisms, to capture multi-dimensional relationships between tokens. They also introduce new pre-training tasks, like text-image matching and sequence length prediction, to enhance the understanding of document content and layout. These models are suitable for various multimodal tasks, such as document classification, image captioning, and video understanding [46  ###reference_b46###, 47  ###reference_b47###, 48  ###reference_b48###].\nSelfDoc [49  ###reference_b49###] is a novel model in the way the textual features are encoded.\nInstead of working on word-level embeddings, SelfDoc receives text grouped by semantically relevant components also referred to as document object proposals (text-block, title, list, table, figure) as model input.\nFor the component-specific text extraction, the authors train a Faster R-CNN [50  ###reference_b50###] on public document datasets PubLayNet [3  ###reference_b3###] and DocVQA [51  ###reference_b51###] on a document object detection task.\nThe categorized regions are cropped from the document and passed to an OCR engine.\nThe encoded visual and textual feature vectors are then passed separately through two distinct multi-head attention encoders.\nSince those encoders do not share information between the visual and textual modality, they are referred to as single-modality encoders.\nThe resulting attention matrix of both modalities is then combined using a third encoder, making the system a cross-modality encoder. This mechanism allows the SelfDoc model to use multi-modal document features during the pre-training phase.\nUniLMv2 [52  ###reference_b52###] allows for pre-training of a unified language model consisting of an auto-encoding and and a partially auto-regressive model.\nThe auto-encoding model predicts tokens by conditioning on context just like BERT [53  ###reference_b53###].\nThe partially auto-regressive model is based on masked- and pseudo-masked tokens. It can predict one or more masked (or pseudo-masked) tokens per factorization step. This approach allows the model to train on masked-token spans instead of single tokens. The authors refer to this as Pseudo-Masked Language Modelling.\nMasking of the data is done as follows: 15% of original tokens are masked. 40% of the time n-gram blocks are masked and 60% of the time single tokens are masked. The pre-training objective is to minimize the summed cross-entropy loss for the reconstruction of masked- and pseudo-masked-tokens in both models.\nThe model’s input consists of word token-embeddings, their absolute position embedding, and their segment embedding.\nDocFormer [54  ###reference_b54###] improves on multi-modal training by fusing vision and language network layers.\nThe visual features are obtained by using a ResNet CNN [43  ###reference_b43###] at a lower-resolution embedding level.\nThe visual embedding is then reduced in dimensionality by applying a 1 x 1 convolution. For the text embedding, DocFormer uses the OCR result from the document image and tokenizes it using WordPiece [36  ###reference_b36###]. The tokenized text  is in the form of  where N = 511 and all further tokens  with  are ignored. The text embedding is padded using a [PAD] token that is ignored by the self-attention mechanism. The resulting text input feature is of the same shape as the visual feature and formally defined as\n\nwhere the weight  is initialized from LayoutLM pre-training weights.\nFor the spatial features the authors use the top-left and bottom-right coordinate of each word’s bounding box in addition to the box’s width , height , the euclidean distance from each corner of a box to each corner of the next box, and the centroid distance between boxes.\nThe latter two can be defined as  where  defines the direction of the relation ( stands for the centroid coordinate).\nSimilar to many comparable models DocFormer also encodes a 1D position encoding  which defines the token sequence.\nStrucText [55  ###reference_b55###] model uses a multi-modal combination of visual and textual document features.\nThe textual embedding consists of a language token embedding where each text sentence is processed coherently to preserve semantic context.\nThis is different from other models where word tokens of a sentence are processed individually. A sentence S is a sorted set of words, with the line delimiters [CLS] and [SEP] inserted at the beginning () and the at the end () of a sentence respectively.\nThe final textual embedding is achieved by combining the language token embedding with the layout embedding (i.e. bounding box of token).\nFor extractions of features of an image , ResNet [43  ###reference_b43###] is used which creates the visual embedding. Additionally, a sequence id embedding is used to capitalize on text segment order.\nFor pre-training, the authors used MVLM of LayoutLM in combination with two additional tasks.\nThe first novel task is called sequence length prediction (SLP) where the length of a text sequence has to be predicted based on the visual features of the document.\nThis task forces the model to learn from the image embedding.\nThe second additional task is paired box direction (PBD).\nFor two text segments  and , the model needs to predict in which direction segment  is located with respect to .\nHere the 360-degree field is divided into eight buckets of identical size.\nPBD is therefore a classification task that forces the model to learn spatial text segment relationships.\nBROS [56  ###reference_b56###] model does not incorporate the image of the text for pre-training, which is considered SOTA.\nThe authors claim that it is more effective to focus on the combination of text and position-information, ignoring the layout modality.\nBROS introduces a custom text serializer that sorts the tokens in their respective reading order.\nThe model’s features do not include absolute 2D positions of text, but a relative position representation based on the position of neighboring tokens as shown in Fig. 5  ###reference_###. This has the advantage that the model can capture relations between similar key-value pairs better compared to absolute spatial information."
        },
        {
            "section_id": "4.4",
            "parent_section_id": "4",
            "section_name": "Cross-Modal Interaction Models",
            "text": "Cross-Modal Interaction Models are a type of artificial intelligence model that facilitate interactions between different modalities like text and layout in multimodal data. They employ attention mechanisms and fusion strategies to enable cross-modal information exchange and enhance the perception and understanding of the data. These models are suitable for various cross-modal tasks, such as document analysis, image-text retrieval, and video question answering.\nUDoc [57  ###reference_b57###] is a framework that employs a multi-layer gated cross-attention encoder [58  ###reference_b58###, 59  ###reference_b59###], enabling effective cross-modal interactions within a single model. Unlike traditional methods, UDoc takes into account the complex and diverse nature of documents by incorporating both textual and visual features. This approach addresses the challenges of hierarchical document structures, multimodal content, and spatial layout. UDoc employs three pretraining tasks: Masked Sentence Modeling (MSM) [50  ###reference_b50###], Visual Contrastive Learning (VCL), and Vision-Language Alignment (VLA) [60  ###reference_b60###]. MSM predicts masked sentence embeddings, VCL focuses on quantized visual features, and VLA enforces alignment between textual and visual elements.\nThe document images are processed through feature extraction and quantization, providing a structured representation. The pretraining tasks, including MSM, VCL, and VLA, contribute to enhanced embeddings, capturing both local and global dependencies.\nTILT [61  ###reference_b61###] addresses the complex challenge of natural language comprehension in documents that extend beyond plain text by introducing the Text-Image-Layout Transformer (TILT) neural network architecture. TILT is designed to simultaneously capture layout information, visual features, and textual semantics, making it capable of handling documents with rich spatial layouts. TILT model integrates layout representation through attention biases and contextualized visual information, leveraging pre-trained encoder-decoder Transformers [62  ###reference_b62###, 63  ###reference_b63###].\nIn the proposed TILT architecture, the model’s strength lies in its ability to combine contextualized image embeddings [64  ###reference_b64###] with semantic embeddings. By incorporating both layout and visual information, TILT enhances its understanding of documents, particularly those with complex structures like forms and tables."
        },
        {
            "section_id": "4.5",
            "parent_section_id": "4",
            "section_name": "Sequence-to-Sequence Models",
            "text": "Encoder-Decoder and Sequence-to-Sequence Models involve encoders to process input data and decoders to generate sequential output. The encoders and decoders can be composed of different architectures, such as recurrent neural networks (RNNs), convolutional neural networks (CNNs), or transformers. They are used for tasks like text generation, translation, and sequence prediction, where the input and output have different lengths or structures [65  ###reference_b65###, 66  ###reference_b66###, 67  ###reference_b67###, 68  ###reference_b68###].\nGenDoc [69  ###reference_b69###] model employs an encoder-decoder architecture, allowing adaptability to diverse downstream tasks with varying output formats, which differentiates it from common encoder-only models. GenDoc’s pre-training tasks encompass masked text prediction, masked image token prediction, and masked coordinate prediction, catering to multiple modalities. The model integrates modality-specific instructions, disentangled attention [70  ###reference_b70###], and a mixture-of-modality-experts(MoE) [71  ###reference_b71###] approach to effectively capture information from each modality.\nThe fusion of modalities within the encoder is achieved through disentangled attention, leading to improved layout effectiveness. The authors employ disentangled attentions for various interactions, including content-to-content, content-to-layout in the x-dimension, and content-to-layout in the y-dimension. This is represented by the following equations:\nHere,  represents the resulting attention score between positions  and ;\n is the conventional attention score from content query  to content key  for positions  and ;\n and  denote the disentangled attention scores from content to layout;\n denotes the relative distance function between positions  and .\nIn contrast, modality separation within the decoder employs the MoE strategy, which activates task-specific experts for natural language, image token prediction, and coordinate prediction tasks. The pre-training tasks include text infilling, masked image token prediction, and masked coordinate prediction, employing a shared vocabulary.\nDocFormerv2 [72  ###reference_b72###] comprises a multi-modal encoder [73  ###reference_b73###] tailored to process both textual and spatial characteristics inherent in documents. The model adopts traditional transformer-based language modeling to handle textual content while introducing inventive pre-training tasks like token-to-line and token-to-grid predictions to capture document layout and structure as shown in Fig 4  ###reference_### and 4  ###reference_###. This approach enables the model to understand the spatial arrangement of document elements.\nTo effectively incorporate spatial information from document images, the authors introduce spatial features that encode critical elements such as position, size, and category. By encoding these elements, DocFormerv2 gains an understanding of the document’s structure and the relationships between different components.\nA key strength of DocFormerv2 lies in its adept multi-modal fusion techniques [74  ###reference_b74###]. By employing self-attention mechanisms, the model seamlessly integrates textual and spatial features, enabling it to comprehensively understand document content and layout. This fusion facilitates improved performance in a range of document understanding tasks.\nFormNet [75  ###reference_b75###] is designed to improve the extraction of information from complex form-like documents. These documents, which often contain tables, columns, and intricate layouts, pose challenges for traditional sequence models. FormNet addresses this issue by incorporating structural information into the sequence modeling process. FormNet contains two components: Rich Attention and Super-Tokens. Rich Attention enhances attention score calculation by considering both semantic relationships and spatial distances between tokens, enabling the model to capture the underlying layout patterns more effectively. Super-Tokens are constructed for each word in the form through graph convolutions, recovering local syntactic relationships that may have been lost during serialization. The information extraction problem is formulated as sequential tagging for tokenized words, with the goal of predicting key entity classes for each token. The authors build upon the Extended Transformer Construction (ETC) framework, which efficiently handles long sequences. ETC employs sparse global-local attention, and FormNet enhances positional encoding through Rich Attention."
        },
        {
            "section_id": "4.6",
            "parent_section_id": "4",
            "section_name": "Layout Representation and Language-Independent Models",
            "text": "Layout Representation Models [76  ###reference_b76###, 77  ###reference_b77###, 78  ###reference_b78###] focus on capturing and representing the spatial arrangement of components in documents. They encode layout information for tasks like structure analysis and extraction. Language-Independent Models [79  ###reference_b79###, 80  ###reference_b80###, 81  ###reference_b81###] designed to work across multiple languages. They often utilize pre-training in one language and fine-tuning in others, enabling document understanding in various languages.\nMCLR [82  ###reference_b82###] proposed method employs a cell-based layout representation. This representation utilizes row and column indexes to define the position of components within a document, aligning with human reading habits and facilitating a more intuitive understanding of layout structures. The MCLR architecture comprises three main components: the cell-based layout, the multi-scale layout, and data augmentation.\nIn the cell-based layout, the traditional challenge of learning spatial relationships from coordinates is addressed by using row and column indexes. This enables the model to learn whether components share the same row or column and the number of components in each row or column. The approach also provides a more human-centered representation, aligning with natural reading patterns and enhancing the detection of latent rules within the document layout. Furthermore, the authors introduce a multi-scale layout representation by employing word- and token-level cells.\nLiLT [78  ###reference_b78###] introduces an innovative solution to a critical challenge in structured document understanding (SDU). The authors propose the Language-independent Layout Transformer (LiLT), a novel framework that enables pre-training on documents from a single language and subsequent fine-tuning for use with multiple languages.\nThe core architecture of LiLT is founded upon a parallel dual-stream Transformer model that efficiently processes both text and layout information. During pre-training, LiLT decouples the text and layout aspects of the document and employs a bi-directional attention complementation mechanism (BiACM) to facilitate interaction between these modalities. The model is then fine-tuned with a focus on downstream tasks using off-the-shelf pre-trained textual models. This process ensures that LiLT learns and generalizes the layout knowledge from monolingual documents to multilingual contexts."
        },
        {
            "section_id": "4.7",
            "parent_section_id": "4",
            "section_name": "Hybrid Transformer Architectures",
            "text": "Hybrid Transformer Architectures [83  ###reference_b83###, 84  ###reference_b84###] leverage innovative designs to address the challenges of computational complexity and diverse structural representations in document understanding. These models often incorporate novel attention mechanisms, such as Symmetry Cross-Attention (SCA) [85  ###reference_b85###], and utilize hourglass transformer architectures with merging and extension blocks to efficiently process multi-modal information. These designs enhance both performance and efficiency in analyzing complex documents.\nStructuralLM [83  ###reference_b83###] is a successor to the LayoutLM model.\nIt differs from LayoutLM by operating on 2D cell position embeddings instead of 2D word embeddings.\nThe core idea is to better capture word relations by grouping them.\nEach document  is represented by a sequence of cells  and each cell is represented by a sequence of words , where each word  of cell  has the same 2D position embedding.\nIn addition to this, the 2D embedding receives 1D position information per token (i.e. the sequence number of the token) to leverage word order within a cell, and the embedding of the word itself using WordPiece [36  ###reference_b36###].\n\nThe first pre-training task for the StructuralLM model is the MVLM task introduced by LayoutLM [22  ###reference_b22###].\nSince positional information is not dropped during MVLM and words of the same cell share common position information, StructuralLM can leverage the cell grouping during this task.\nThe second pre-training task is called cell position classification (CPC).\nHere, a set of scanned documents is split into  areas. For a random cell of the documents, the model needs to predict where the cell belongs using its center coordinate.\nThis is in essence a multinomial classification task where each label  belongs to a document section.\nStrucTexTv2 [84  ###reference_b84###] a model that combines visual and textual information to effectively analyze document images. The proposed approach employs a unique pre-training strategy with two self-supervised tasks: Mask Language Modeling (MLM) [16  ###reference_b16###] and Mask Image Modeling (MIM) [86  ###reference_b86###, 87  ###reference_b87###], where text region-level masking is utilized to predict both visual and textual content. The core architecture of StrucTexTv2 comprises two main components: a visual extractor (CNN) and a semantic module (Transformer). The visual extractor processes the input document image using convolutional layers, extracting visual features from different stages of downsampling. The semantic module employs the Transformer architecture, which takes the flattened visual features and transforms them into a 1D sequence of patch token embeddings. A relative position embedding is added to the token embeddings, and the standard transformer processes these embeddings to generate enhanced semantic features. The resulting feature maps are reshaped to 2D context feature maps and up-sampled with a Feature Pyramid Network (FPN) strategy [44  ###reference_b44###].\nFast-StrucTexT [85  ###reference_b85###] is an innovative and efficient transformer-based framework designed for document understanding tasks. The proposed model addresses the challenges posed by the computational complexity of traditional transformers while efficiently handling the diverse structural representations within documents. Fast-StrucTexT incorporates a novel hourglass transformer architecture, modality-guided dynamic token merging, and Symmetry Cross-Attention (SCA) [88  ###reference_b88###] to achieve both high performance and efficiency.\nThe SCA module functions as a two-way cross-attention mechanism that facilitates interaction between different modes. In this module, one set of model features serves as the query, while another set of features from a different mode serves as both the key and value. This arrangement enables the calculation of cross-attention in both visual and textual modalities.\nThe SCA is defined by the following equations:\n1. Cross-Attention (CA) between feature sets  and  is given by:\nwhere , , and  are linear projections for query, key, and value respectively.  represents the softmax function,  is the hidden size, and  is the output weight.\n2. SCA between feature sets  and  is defined as:\nFast-StrucTexT leverages an hourglass transformer design, integrating Merging-Blocks and Extension-Blocks to efficiently process multi-modal information and handle complex document structures. The Merging-Blocks aggregate tokens to capture higher-level context, enhancing efficiency without compromising semantic richness. Complementarily, Extension-Blocks recover merged tokens, ensuring fine-grained details are preserved. The modality-guided dynamic token merging mechanism selectively merges tokens based on relevance, enabling diverse structural representations.\nModalities\n\n\nModel\n\n\nText\n\n\n\n1D Pos.\n\n\n\n2D Pos.\n\n\n\nImage\n\nApproach type\n\n\n\nBERT\n✓\n✓\n\n\n\n\nLayoutLM\n✓\n✓\n✓\n✓\nimage-based fine-tuning\n\nUniLMv2\n✓\n✓\n✓\n\nseq2seq\n\nPICK\n✓\n✓\n✓\n✓\ngraph-learning\n\nTRIE\n✓\n✓\n✓\n✓\nmulti-task (OCR + IE)\n\nLayoutLMv2\n✓\n✓\n✓\n✓\nspatial-aware self-attention\n\nStructuralLM\n✓\n✓\n✓\n✓\ntext-segment grouping\n\nSelfDoc\n✓\n✓\n✓\n✓\ntext-segment grouping\n\nDocFormer\n✓\n✓\n✓\n✓\ndiscrete multi-modal\n\nStrucText\n✓\n✓\n✓\n✓\ntext-segment grouping\n\nBROS\n✓\n✓\n✓\n\nusing relative 2D positions\n\nStrucTexTv2\n✓\n✓\n✓\n✓\nmulti-modal fusion\n\nFast-StrucTexT\n✓\n✓\n✓\n✓\nefficient transformer\n\nDocFormerv2\n✓\n✓\n✓\n✓\nmulti-modal encoder\n\nUDoc\n✓\n✓\n✓\n✓\ngated cross-attention\n\nTILT\n✓\n✓\n✓\n✓\nText-Image-Layout Transformer\n\nGenDoc\n✓\n✓\n✓\n✓\nmodality fusion, disentangled attention\n\nMCLR\n✓\n✓\n✓\n✓\ncell-based layout, multi-scale layout\n\nLiLT\n✓\n✓\n✓\n✓\nlanguage-independent layout\n###figure_3### ###figure_4### ###figure_5### ###figure_6###"
        },
        {
            "section_id": "5",
            "parent_section_id": null,
            "section_name": "Datasets",
            "text": "In this section, we introduce commonly used datasets for form understanding tasks.\nFor a comparison of basic features of the datasets, see Tab. 2  ###reference_###.\nDataset\nDocument Content\nColor\nUsed Languages\n#Documents\nDocument Type\n\n\n\nFUNSD\nMachine Written / Handwritten\nB/W\nEN\n199\nForm Documents\n\nXFUND\nMachine Written / Handwritten\nB/W\nMulti-lingual\n199/language\nForm Documents\n\nNAF\nMachine written pre-printed text and mostly handwritten input text\nB/W\nEN\n865\nMultiple\n\nIIT-CDIP\nMachine Written, Handwritten\nB/W\nEN\n\nMultiple\n\nRVL-CDIP\nMachine Written, Handwritten\nB/W\nEN\n\nMultiple\n\nPubLayNet\nMachine Written\nColor\nEN\n\nMedical Literature\n\nSROIE\nMachine Written with occasional handwriting\nColor, B/W\nEN\n\nReceipts\n\nCORD\nMachine Written with occasional handwriting\nColor\nEN\n released,  total\nReceipts\n\nDocVQA\nMachine Written, Handwritten\nColor, B/W\nEN\n\nMultiple\n\nForm-NLU\nMachine Written, Handwritten\nColor, B/W\nEN\n\nMultiple\n\nVRDU\nMachine Written\nColor, B/W\nEN\n\nAd-buy\nRVL-CDIP and IIT-CDIP: The Ryerson Vision Lab Complex Document Information Processing RVL-CDIP dataset [89  ###reference_b89###] was created to evaluate Deep CNNs666https://www.cs.cmu.edu/~aharley/rvl-cdip/  ###reference_###.\nThe dataset is a subset of the IIT Complex Document Information Processing Test Collection IIT-CDIP [4  ###reference_b4###, 90  ###reference_b90###] dataset, which itself contains a collection of documents from the Legacy Tobacco Documents Library (LTDL) created by the University of California San Francisco [91  ###reference_b91###].\nIIT-CDIP consists of  document records in XML format, each of which contains text recognized by OCR and metadata information (document names, geographical information, etc.) of various structure and quality.\nAdditionally, IIT-CDIP contains source images of scanned documents [92  ###reference_b92###].\nIn total, the RVL-CDIP dataset consists of  grayscale images separated into 16 classes (including form documents) with  images per class.\nThe dataset is split into 320k training, 40k validation, and 40k test images.\nFUNSD:\nThe dataset for Form Understanding in Noisy Scanned Documents (FUNSD) [93  ###reference_b93###] is a collection of 199 fully annotated forms from various fields like marketing, science, and more777https://guillaumejaume.github.io/FUNSD/  ###reference_###.\nAll forms are rasterized, low-resolution one-page forms containing noise.\nMore specifically, the authors manually selected  eligible documents from the RVL-CDIP dataset [4  ###reference_b4###] form category and used random sampling to gain a final set of  documents.\nMost of the textual content is machine-written, which might not reflect real-life scenarios where handwritten content can be more prominent.\nAll annotations used for text detection were done by external contractors.\nThe remaining tasks were annotated using an undisclosed annotation tool.\nEvery form in the dataset is encoded in a JSON file where each form is considered as a list of interlinked semantic entities (i.e. a name field that is interlinked with its corresponding answer box).\nEach semantic entity contains an identifier, a label, a bounding box, a list of links with other entities, and a list of words.\nIn total, the dataset contains  semantic entities and  relations.\nThe authors of [94  ###reference_b94###] have found several errors and inconsistencies in the FUNSD dataset including incorrect textual contents and bounding boxes as well as inconsistencies in annotating relations. They released an updated version of the dataset that fixes the discovered issues888https://drive.google.com/drive/folders/1HjJyoKqAh-pvtg3eQAmrbfzPccQZ48rz?fbclid=IwAR2ouj5Sh0vkcKAMNfSoZjSM7vSpGnbK-AowWZZ8_Lltcn34hr7_nVcazu0  ###reference_JyoKqAh-pvtg3eQAmrbfzPccQZ48rz?fbclid=IwAR2ouj5Sh0vkcKAMNfSoZjSM7vSpGnbK-AowWZZ8_Lltcn34hr7_nVcazu0###.\nXFUND [95  ###reference_b95###] is an extension to FUNSD where the dataset is translated into seven other languages, namely Chinese, Japanese, Spanish, French, Italian, German, and Portuguese.\nLike FUNSD, the dataset contains information on both semantic entities in a document and their relations to one another999https://github.com/doc-analysis/XFUND  ###reference_###.\nThe dataset was manually created by gathering form templates in the above-mentioned languages from the internet.\nEach form is filled out exactly once with synthetic information to prevent repetition of forms and avoid sharing sensitive information. Forms are filled out either digitally or with handwriting and then scanned to again be similar to the original FUNSD dataset.\nTo generate bounding boxes for each semantic entity, the authors use the Microsoft Read API [96  ###reference_b96###].\nRelation extraction is then done manually by annotators.\nIn total, the XFUND dataset contains  forms per language ( total) split into training/test splits of / documents respectively.\nNAF [1  ###reference_b1###, 97  ###reference_b97###] is an annotated dataset created from historical form images of the United States National Archives.\nThe forms have varied layouts and are noisy from degradation and machinery that was used to print them.\nA form in the dataset typically contains English pre-printed text and English input text consisting of handwriting, typed text, and stamped content.\nIn total, the dataset contains  annotated grayscale form images.\nIt is undisclosed how they were annotated.\nThe NAF dataset is manually split into a training, a validation, and a test set such that each set contains images with distinct form layouts.\nWith this, the authors create a scenario where a classifier trained with the training set will not have seen the form layouts of the test set.\nPubLayNet [3  ###reference_b3###] is a dataset that was automatically created by matching the XML representations and the content of  scientific PDF articles from PubMed CentralTM.\nThe dataset was created primarily to advance research in document layout analysis, meaning it is not specifically made for form detection101010https://github.com/ibm-aur-nlp/PubLayNet  ###reference_###.\nThe annotations were created by parsing the PDF representation of the article using the PDFMiner [98  ###reference_b98###] software and then matching the generated layout with the respective XML representation.\nWhile not mentioned in the paper, most of the\nannotated documents seem to have been removed during the quality control procedure as only a total of  documents remain in the dataset after this step.\nThe dataset is split into  pages for training,  pages for development, and  pages for testing.\nBoth development and testing sets have been selected from multiple different journals and contain a sufficient number of tables, lists, and figures.\nThe SROIE [99  ###reference_b99###] dataset was created as part of the ICDAR 2019 competition on Scanned Receipt OCR and Information Extraction111111https://drive.google.com/drive/folders/1ShItNWXyiY1tFDM5W02bceHuJjyeeJl2  ###reference_ItNWXyiY1tFDM5W02bceHuJjyeeJl2###.\nThe dataset contains 1000 scanned receipt images with different annotations depending on one of three competition tasks (Text Localisation, OCR, and Key-Information Extraction).\nReceipts in the dataset may have poor paper, ink, or print quality, be of low resolution, and contain scanning artifacts. Further, receipts may contain unneeded interfering texts in complex layouts, long texts, and small font sizes.\nEach receipt contains English character text fields like goods name and digit fields like unit price and total cost.\nThe paper does not mention the origin of the receipts.\nCORD: The Consolidated Receipt Dataset for post-OCR parsing [100  ###reference_b100###] was created to be the first public dataset containing box-level text and parsing class annotations.\nParsing class annotations are represented as a combination of one of eight superclasses (i.e. store, payment, and menu) and their respective subclasses (i.e. name, address, and price);\ne.g.,\nmenu.price.\nThe dataset itself contains  Indonesian receipts from shops and restaurants gathered through crowdsourcing.\nImages were manually annotated using a web-based annotation tool where each image is first annotated and then checked for correctness and compliance with the annotation guidelines.\nSensitive information like credit card numbers or a person’s full name have been blurred in the final set of receipts.\nOut of the  receipts, only  have been made available to the public due to concerns of accidentally publishing sensitive personal data.\nAccording to one of the authors of the paper, future data release is unclear [101  ###reference_b101###].\nDocVQA: [51  ###reference_b51###, 102  ###reference_b102###] is a dataset of  document images of varied types for the task of Visual Question Answering.\nThe documents are sourced from documents of the UCSF Industry Documents Library [103  ###reference_b103###].\nIndividual documents were hand-picked to provide suitable image quality and tables, forms, lists, and figures over long-running text fields.\nThe documents are split randomly in an 80/10/10 ratio of train/validation/test splits respectively.\nA total of  questions and answers have been defined on the documents by remote workers using a three-step web-based annotation tool.\nIn the first step, a worker defines up to ten question-answer pairs for a document.\nIn the second step, another worker will try to answer the defined questions without seeing the pre-defined answers.\nIf no answers of the first step match with any of the answers of the second step, the question is moved to a third step where the authors of the paper can manually edit the question-answer pairs.\nBesides question-answer pairs, the dataset also contains one of nine question types per question.\nAn example of a question type is table/list which specifies if table or list understanding is required to answer the question.\nA question can be assigned more than one question type.\nForm-NLU: [104  ###reference_b104###] is a comprehensive dataset designed to advance the field of Natural Language Understanding (NLU) in the context of form-based documents. The dataset comprises a total of  document images, 6k form keys and values, and 4k table keys and values. These documents encompass a variety of form types, including digital, printed, and handwritten. Form-NLU constitutes a portion of the publicly accessible financial form dataset originating from Form 604, which was amassed by SIRCA121212https://asic.gov.au/regulatory-resources/forms/forms-folder/604-notice-of-changeof-interests-of-substantial-holder/  ###reference_orms/forms-folder/604-notice-of-changeof-interests-of-substantial-holder/###. It provides text records of substantial shareholder notifications filed with the Australian Stock Exchange (ASX)131313https://www2.asx.com.au/  ###reference_www2.asx.com.au/### from 2003 to 2015. The authors segmented the annotation into three specialized sub-tasks: Key annotation for 12 types of Keys, Value annotation for paired Values, and Non-Key-Value annotation for other components like Title, Section, and Others. Each annotator handled one sub-task.\nVRDU: is a benchmark dataset for Visually-rich Document Understanding, consisting of two distinct datasets: Ad-buy Forms, comprising 641 documents, and Registration Forms, comprising 1,915 documents. These datasets are designed to address challenges in extracting structured data from visually complex documents. The benchmark incorporates five key desiderata: rich schema, layout-rich documents, diverse templates, high-quality OCR results, and token-level annotation.\nThe benchmark focuses on three tasks:\nSingle Template Learning (STL): the model is trained and evaluated on documents that belong to a single template. This means that the training, validation, and testing sets all contain documents that share the same structural layout or template. The goal of this task is to assess the model’s ability to extract structured data when presented with a consistent and familiar document layout.\nMixed Template Learning (MTL): the model is trained and evaluated on documents that come from a set of templates. The training, validation, and testing sets include documents from different but predefined templates. This task evaluates the model’s capacity to generalize its learning to diverse document layouts and templates that it has encountered during training.\nUnseen Template Learning (UTL): The Unseen Template Learning task challenges the model to generalize beyond its training experience. In this task, the model is trained on documents from a subset of templates and is then evaluated on documents with templates it has never encountered during training. The goal is to assess the model’s ability to adapt to new, previously unseen document layouts and templates.\nThe evaluation toolkit includes a type-aware fuzzy matching algorithm to assess extraction performance. Repeated, unrepeated, and hierarchical entity names are included, with post-processing heuristics to handle unrepeated and hierarchical entities."
        },
        {
            "section_id": "6",
            "parent_section_id": null,
            "section_name": "Experiments Results",
            "text": "In this section, we provide a comprehensive comparison of selected models on various datasets, including FUNSD, SROIE, CORD, RVL-CDIP, DocVQA, and Publaynet. We evaluate the models’ performance using a range of metrics, including Precision, Recall, F1 Score, Accuracy, Average Normalized Line Similarity (Anls), and Mean Average Precision (MAP)."
        },
        {
            "section_id": "6.1",
            "parent_section_id": "6",
            "section_name": "Evaluation Metrics",
            "text": "We utilize several evaluation metrics to assess the effectiveness of the models in extracting structured information from scanned documents. The key evaluation metrics are as follows:"
        },
        {
            "section_id": "6.1.1",
            "parent_section_id": "6.1",
            "section_name": "6.1.1 Precision, Recall, F1 Score, and Accuracy",
            "text": "Precision, Recall, F1 Score, and Accuracy are standard metrics used to evaluate the performance of models in classification tasks. These metrics are calculated as follows:\nWhere:\nTrue Positives (TP) are the correctly predicted positive samples.\nFalse Positives (FP) are the incorrectly predicted positive samples.\nFalse Negatives (FN) are the incorrectly predicted negative samples.\nTrue Negatives (TN) are the correctly predicted negative samples.\nTotal Samples is the total number of samples in the dataset."
        },
        {
            "section_id": "6.1.2",
            "parent_section_id": "6.1",
            "section_name": "6.1.2  Average Normalized Levenshtein Similarity (Anls)",
            "text": "Anls [105  ###reference_b105###] captures the OCR mistakes applying a slight penalization in case of correct intended responses, but badly recognized. It also makes use of a threshold of value 0.5 that dictates whether the output of the metric will be the ANLS if its value is equal to or bigger than 0.5 or 0 otherwise. The key point of this threshold is to determine if the answer has been correctly selected but not properly recognized, or on the contrary, the output is a wrong text selected from the options and given as an answer.\nMore formally, the ANLS between the net output and the ground truth answers is given by the following equation. Where  is the total number of questions,  total number of GT answers per question,  the ground truth answers where , and , and  be the network’s answer for the ith question :\nWhere:\nwhere  is defined as follows:"
        },
        {
            "section_id": "6.1.3",
            "parent_section_id": "6.1",
            "section_name": "6.1.3 Mean Average Precision (MAP)",
            "text": "MAP is a metric commonly used to evaluate the quality of ranked lists in information retrieval tasks. It involves calculating the Average Precision (AP) for each query and then averaging these values across all queries. MAP is also used in object detection to evaluate the performance of a model. In object detection, the goal is to identify and localize objects in an image or video. The MAP metric takes into account both the accuracy of the detections and the precision of the detections. The formula for calculating MAP is as follows:\nWhere:\nis the total number of queries.\nis the Average Precision for query , calculated as the average precision of relevant documents at each position in the ranked list:\nWhere:\nis the total number of retrieved documents for query .\nis the precision at position  in the ranked list.\nis an indicator function that takes the value 1 if the document at position  is relevant to query , and 0 otherwise."
        },
        {
            "section_id": "6.2",
            "parent_section_id": "6",
            "section_name": "Model Comparison",
            "text": "In this section, We present a comparison of selected models on the FUNSD, SROIE, CORD, RVL-CDIP, DocVQA, and Publaynet datasets in Table 3  ###reference_###, 4  ###reference_###, 5  ###reference_###, 6  ###reference_###, 7  ###reference_###,and 8  ###reference_###. The table provides the Precision, Recall, F1 Score, Accuracy, Anls, MAP, and the number of parameters for each model on each dataset."
        },
        {
            "section_id": "6.2.1",
            "parent_section_id": "6.2",
            "section_name": "6.2.1 FUNSD Dataset",
            "text": "Model\nDataset\nPrecision\nRecall\nF1\n#Params\n\n\n\nLayoutLMBase\nFUNSD\n0.7597\n0.8155\n0.7866\n113M\n\nLayoutLMLarge\nFUNSD\n0.7596\n0.8219\n0.7895\n343M\n\nLayoutLMv2Base\nFUNSD\n0.8029\n0.8539\n0.8276\n200M\n\nBROSBase\nFUNSD\n0.8116\n0.8502\n0.8305\n110M\n\nStrucText\nFUNSD\n0.8568\n0.8097\n0.8309\n107M\n\nDocFormerBase\nFUNSD\n0.8076\n0.8609\n0.8334\n183M\n\nSelfDoc\nFUNSD\n-\n-\n0.8336\n-\n\nLayoutLMv2Large\nFUNSD\n0.8324\n0.8519\n0.8420\n426M\n\nBROSLarge\nFUNSD\n0.8281\n0.8631\n0.8452\n340M\n\nDocFormerLarge\nFUNSD\n0.8229\n0.8694\n0.8455\n536M\n\nFormNet\nFUNSD\n0.8521\n0.8418\n0.8469\n217M\n\nStructuralLMLarge\nFUNSD\n0.8352\n0.8681\n0.8514\n355M\n\nUDoc\nFUNSD\n-\n-\n0.8720\n274M\n\nDocFormerv2Base\nFUNSD\n0.8915\n0.876\n0.8837\n232M\n\nDocFormerv2Large\nFUNSD\n0.8988\n0.8792\n0.8889\n750M\n\nStrucTexTv2Small\nFUNSD\n-\n-\n0.8923\n107M\n\nFast-StrucTexTLinear\nFUNSD\n-\n-\n0.8950\n-\n\nLayoutLMv3Base\nFUNSD\n-\n-\n0.9029\n133M\n\nFast-StrucTexTResNet-18\nFUNSD\n-\n-\n0.9035\n-\n\nStrucTexTv2Large\nFUNSD\n-\n-\n0.9182\n238M\n\nLayoutLMv3Large\nFUNSD\n-\n-\n0.9208\n368M\n\nMCLRLarge\nFUNSD\n-\n-\n0.9352\n368M\n\nMCLRBase\nFUNSD\n-\n-\n0.9376\n133M\n\nDiTBase\nFUNSD\n0.9470\n0.9307\n0.9388\n87M\n\nDiTLarge\nFUNSD\n0.9452\n0.9336\n0.9393\n304M\nThe FUNSD dataset, renowned for form understanding tasks, serves as a crucial benchmark for evaluating various models’ performance. A comprehensive analysis of the comparison results presented in Table 3  ###reference_### yields valuable insights into the models’ abilities. Notably, the transition from LayoutLM to LayoutLMv2 highlights the impact of introducing spatial-aware self-attention, leading to improved F1 scores. Noteworthy performance is observed from LayoutLMv3 BASE, which outperforms its predecessors with an impressive F1 score of 0.9029. StructuralLM LARGE stands out with an F1 score of 0.8514, indicating the success of its approach. StrucTexTv2 LARGE, despite its lower parameter count, achieves a competitive F1 score of 0.9182, demonstrating its efficiency in form understanding tasks. Additionally, DiT BASE and DiT LARGE showcase promising results with F1 scores of 0.9388 and 0.9393, respectively."
        },
        {
            "section_id": "6.2.2",
            "parent_section_id": "6.2",
            "section_name": "6.2.2 SROIE Dataset",
            "text": "Model\nDataset\nPrecision\nRecall\nF1\n#Params\n\n\n\nLayoutLMBase\nSROIE\n0.9438\n0.9438\n0.9438\n113M\n\nLayoutLMLarge\nSROIE\n0.9524\n0.9524\n0.9524\n343M\n\nPICK\nSROIE\n0.9679\n0.9546\n0.9612\n-\n\nTRIE\nSROIE\n-\n-\n0.9618\n-\n\nLayoutLMv2Base\nSROIE\n0.9625\n0.9625\n0.9625\n200M\n\nLayoutLMv2Large\nSROIE\n0.9661\n0.9661\n0.9661\n426M\n\nStrucText\nSROIE\n0.9584\n0.9852\n0.9688\n107M\n\nFast-StrucTexTLinear\nSROIE\n-\n-\n0.9712\n-\n\nFast-StrucTexTResNet-18\nSROIE\n-\n-\n0.9755\n-\n\nTILTBase\nSROIE\n-\n-\n0.9765\n230M\n\nTILTLarge\nSROIE\n-\n-\n0.9810\n780M\nThe evaluation of various models on the SROIE dataset, which is centered around receipt understanding and key-information extraction tasks, provides insights into the capabilities of these models for form-based understanding. Table 4  ###reference_### presents a comprehensive comparison of the performance achieved by different models on this dataset.\nLayoutLMv2 BASE and LayoutLMv2 LARGE demonstrate their prowess in the receipt understanding task. Both models achieve high precision, recall, and F1 scores of 0.9625 and 0.9661 respectively. StrucText exhibits strong recall with a score of 0.9852, showcasing its effectiveness in capturing key information from receipts. Its F1 score of 0.9688 indicates a balanced trade-off between precision and recall, making it a viable option for the SROIE dataset."
        },
        {
            "section_id": "6.2.3",
            "parent_section_id": "6.2",
            "section_name": "6.2.3 Publaynet Dataset",
            "text": "The PubLayNet dataset, despite its primary focus on advancing document layout analysis, has garnered attention from researchers in the field of form understanding due to its extensive annotations and diverse scientific content. As showcased in Table 5  ###reference_###, various models have been evaluated on the PubLayNet dataset. Among the evaluated models, LayoutLMv3 Base stands out with a high Mean Average Precision (MAP) of 0.9510. This suggests that the model’s spatial-aware self-attention mechanism and architecture contribute to effectively capturing layout information, even in the context of intricate scientific documents. Similarly, DiT LARGE showcases promising results with a MAP of 0.9490, demonstrating its capability in processing diverse document layouts for form understanding. GenDoc Base, while not specifically designed for layout analysis, still achieves a competitive MAP of 0.9440, indicating its generalizability to document understanding tasks. UDoc also demonstrates its effectiveness in this domain, achieving a MAP of 0.9390. StrucTexTv2 models, operating at different resolutions (224x224, 512x512, and 960x960), exhibit varying levels of performance, with the 960x960 variant achieving the highest MAP of 0.9490."
        },
        {
            "section_id": "6.2.4",
            "parent_section_id": "6.2",
            "section_name": "6.2.4 DocVQA Dataset",
            "text": "The evaluation of various models on the DocVQA dataset provides insights into their effectiveness in addressing the challenges posed by document-based visual question answering. Table 6  ###reference_### presents a comprehensive comparison of the performance achieved by different models on this dataset. StructuralLM LARGE stands out as a strong performer, boasting an analysis score of . This achievement underscores the model’s ability to integrate structural information from documents and effectively answer questions based on visual and textual cues. Both LayoutLMv3 Large and LayoutLMv2 Large demonstrate their prowess in document understanding, achieving scores of  and  respectively. These models leverage advanced self-attention mechanisms to capture contextual and spatial relationships in documents, enabling them to tackle complex questions that involve both textual and visual components."
        },
        {
            "section_id": "6.2.5",
            "parent_section_id": "6.2",
            "section_name": "6.2.5 RVL-CDIP Dataset",
            "text": "The RVL-CDIP dataset offers a distinct dimension in the realm of form understanding, featuring multi-class single-label classification tasks. The comprehensive model comparison presented in Table 7  ###reference_### provides valuable insights into various models’ performances. Among these models, the DocFormer architecture emerges as a standout performer, particularly DocFormer Base, which attains an exceptional accuracy score of 0.9617, positioning itself at the forefront. This accomplishment underscores the efficacy of the DocFormer approach in tackling the challenges posed by multi-class classification tasks within the form understanding domain.\nA noteworthy observation arises from the juxtaposition of DocFormer LARGE and DocFormer BASE, accentuating the interplay between model complexity and performance enhancement. Although DocFormer LARGE achieves marginally lower accuracy than its BASE counterpart, it does so with a notable increase in the number of model parameters. This trade-off underlines the nuanced relationship between model size and the achieved accuracy, showcasing the balance that must be struck when considering practical deployment and computational efficiency.\nMoreover, this dataset comparison affirms the competitive capabilities of other models, such as StructuralLM LARGE, LayoutLMv3, LayoutLMv2, and StrucTexTv2 LARGE, each contributing to the diverse landscape of form understanding. Furthermore, the inclusion of various baseline models like BEiT and DiT provides a comprehensive perspective on the state-of-the-art advancements in multi-class classification on the RVL-CDIP dataset."
        },
        {
            "section_id": "6.2.6",
            "parent_section_id": "6.2",
            "section_name": "6.2.6 CORD Dataset",
            "text": "Model\nDataset\nPrecision\nRecall\nF1\n#Params\n\n\n\nLayoutLMBase\nCORD\n0.9437\n0.9508\n0.9472\n113M\n\nLayoutLMLarge\nCORD\n0.9432\n0.9554\n0.9493\n343M\n\nLayoutLMv2Base\nCORD\n0.9453\n0.9539\n0.9495\n200M\n\nTILTBase\nCORD\n-\n-\n0.9511\n230M\n\nLayoutLMv2Large\nCORD\n0.9565\n0.9637\n0.9601\n426M\n\nDocFormerBase\nCORD\n0.9652\n0.9614\n0.9633\n183M\n\nTILTLarge\nCORD\n-\n-\n0.9633\n780M\n\nLayoutLMv3Base\nCORD\n-\n-\n0.9656\n133M\n\nGenDocBase\nCORD\n-\n-\n0.9659\n-\n\nFast-StrucTexTLinear\nCORD\n-\n-\n0.9665\n-\n\nDocFormerv2Base\nCORD\n0.9751\n0.9610\n0.9680\n232M\n\nGenDocLarge\nCORD\n-\n-\n0.9697\n-\n\nDocFormerLarge\nCORD\n0.9725\n0.9674\n0.9699\n536M\n\nFast-StrucTexTResNet-18\nCORD\n-\n-\n0.9715\n-\n\nMCLRBase\nCORD\n-\n-\n0.9723\n133M\n\nFormNet\nCORD\n0.9802\n0.9655\n0.9728\n345M\n\nLayoutLMv3Large\nCORD\n-\n-\n0.9746\n368M\n\nMCLRBase\nCORD\n-\n-\n0.9749\n368M\n\nDocFormerv2Large\nCORD\n0.9771\n0.9770\n0.9770\n750M\n\nUDocLarge\nCORD\n-\n-\n0.9813\n274M\nWhile the CORD dataset is more oriented towards receipt understanding, The models demonstrate a range of strengths in capturing different aspects of the documents, including textual content, spatial arrangement, and overall structure. A comprehensive analysis of the comparison results presented in Table 8  ###reference_###. Notably, the LayoutLM variants, LayoutLM BASE and LayoutLM LARGE exhibit strong performance with F1 scores of 0.9472 and 0.9493, respectively, benefiting from their layout-aware self-attention mechanisms. DocFormer models, particularly DocFormer BASE and DocFormer LARGE, excel in capturing complex structural patterns and linguistic context, achieving impressive F1 scores of 0.9633 and 0.9699. The LayoutLMv2 models also perform well, with LayoutLMv2 LARGE achieving an F1 score of 0.9601. The Fast-StrucTexT models, including Fast-StrucTexT Linear and Fast-StrucTexT ResNet-18, demonstrate solid performance with F1 scores of 0.9665 and 0.9715, respectively, indicating the efficiency of their hourglass transformer architecture. UDoc LARGE emerges as a top performer, achieving an impressive F1 score of 0.9813, showcasing the effectiveness of its gated cross-attention mechanism in capturing both textual and spatial information. Models like TILT Base and GenDoc Base also show competitive performance, highlighting their potential in addressing document understanding challenges. MCLR base and MCLR base achieve strong F1 scores of 0.9723 and 0.9749, respectively, emphasizing the success of their cell-based layout representation. FormNet achieves a high accuracy of 0.9728, showcasing its proficiency in extracting information from complex form-like documents."
        },
        {
            "section_id": "6.2.7",
            "parent_section_id": "6.2",
            "section_name": "6.2.7 Overall Insights",
            "text": "We explored different datasets to understand various forms, along with comparisons of the models used, which have provided insights into the current state of this field. Through this analysis, we were able to uncover both opportunities and challenges that extend beyond individual instances, shedding light on the broader landscape of form understanding. A key observation is the rich diversity of approaches employed to tackle the form understanding tasks, as revealed by model comparisons across different datasets. Notably, the consistent performance of LayoutLMv2 models highlights a wide range of spatial-aware self-attention mechanisms. One standout during these comparisons is the diversity of using DocFormer models across various datasets. Their consistent ability to deliver competitive results underscores their potential to adapt and excel across of form understanding tasks. This adaptability positions the DocFormer models as a strong contender for addressing a range of document-related challenges.\nThe balance between model complexity, quantified by the number of parameters, and the resulting performance gains. While larger models tend to yield slightly improved results, the considerable increase in resource requirements highlights the need for thoughtful evaluation of the trade-offs between computational demands and performance enhancements when selecting models for specific tasks. The distinct focus of each dataset opens up avenues for the development of specialized models. For example, the SROIE dataset, centered around receipts, showcases how models like TILT Large can excel in context-specific scenarios. This underscores the potential for efficient form understanding even in domain-specific contexts. The real-world datasets introduced challenges inherent to complex and unstructured data, such as noise, layout variations, and diverse document formats. These hurdles underscore the necessity for models that can robustly handle such complexities, emphasizing the importance of building solutions that are both resilient and adaptable."
        },
        {
            "section_id": "7",
            "parent_section_id": null,
            "section_name": "Conclusions",
            "text": "In this paper, we provided an extensive overview of modern approaches for form understanding. We showed that current state-of-the-art models are all based on transformer models, which makes them easy to use and adapt to a variety of tasks due to the pre-training / fine-tuning approach. MVLM is used by 6 models (LayoutLM, UniLMv2, LayoutLMv2, StructuralLM, StrucText, BROS). All of the presented models used multiple document modalities. The textual baseline transformer is always extended with text-position information on either word, sentence, or text-segment level. Especially the relative position encoding used by the BROS model seems promising. The layout information, which is provided by extracting text-image features, also seems crucial for good performance, as shown by the performance increase of LayoutLMv2 compared to its predecessor."
        }
    ]
}