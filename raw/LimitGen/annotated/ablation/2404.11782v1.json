{
    "title": "Requal-lm: Reliability and Equity through Aggregation in Large Language ModelsThis work was supported in part by NSF 2107290.",
    "abstract": "The extensive scope of large language models (LLMs) across various domains underscores the critical importance of responsibility in their application, beyond natural language processing.\nIn particular, the randomized nature of LLMs, coupled with inherent biases and historical stereotypes in data,\nraises critical concerns regarding reliability and equity.\nAddressing these challenges are necessary before using LLMs for applications with societal impact.",
    "sections": [
        {
            "section_id": "1",
            "parent_section_id": null,
            "section_name": "Introduction",
            "text": "In the ever-evolving realm of advanced technologies, Large Language Models (LLMs) have quickly emerged as versatile tools, extending their influence far beyond the boundaries of natural language processing (NLP).\nMany of the traditionally challenging tasks with decades of research in various fields of computer science are finding more effective resolutions with the help of LLMs. Let us consider Example 1  ###reference_### as a motivating example for subset selection using LLM.\nLLMs are sequential randomized approaches based on estimations learned from large textual datasets. In particular, based on the prompt and the sequence of tokens generated so far, each word (token) in the dictionary is assigned a probability. Then, the next token is generated probabilistically (proportional to the probabilities of the top-k or top-p%) using the parameter temperature.\nConsequently, the output may vary when the LLM is queried again.\nAs a result, a valid concern, particularly for a decision maker, is whether they should rely on the LLM’s output for taking action.\nIn settings similar to Example 1  ###reference_###, the reliability question is further significant, since a method to combine the performance criteria has not been specified, while small changes in the combination details may significantly change the output Guan et al. (2019  ###reference_b10###).\nAnother challenge that makes a single query to the LLMs unreliable arises for the symmetric settings, where the ordering between the input does not matter, i.e., shuffling the input should not impact the output.\nFor instance, in Example 1  ###reference_### the ordering based on which the employees are passed to the LLM should not impact the output.\nConversely, LLMs receive an input as a (ordered) sequence. As a result, as it was observed in Gao et al. (2023  ###reference_b8###), the output of the LLMs for symmetric problems vary when the input is shuffled.\nWe also observed the same behavior in our experiments on a subset selection task, where the entities that are placed at the beginning of the list had a higher chance of being returned as the output.\nTo resolve these issues\nwe introduce Requal-lm that, instead of relying on a single query to an LLM, follows a Monte-carlo method Hammersley (2013  ###reference_b11###) based on repeated sampling.\nParticularly, viewing each LLM output as a sample from the underlying distribution of possible outputs, it identifies the centroid of a collection of samples as its estimation of the mean of the distribution, and returns the closest output to the centroid as the most reliable one. To further clarify this, let us consider Example 1  ###reference_### once again.\nWhile being effective in practice, data-driven technologies have been heavily criticized for machine bias Angwin et al. (2022  ###reference_b1###), and LLMs are not an exception when it comes to bias.\nAs a result, another valid concern when using LLMs for decision making is neutrality: to ensure that impact of historical biases and stereotypes are minimized and that values such as diversity are promoted.\nLLMs are among the fast-growing technologies, with new and advanced versions regularly emerging, while many of these systems are “black-box”.\nOur system design is not dependent on a specific LLM, which makes it a ready-to-apply wrapper that works on top of any of the current and future closed-source and open-source LLMs.\nRequal-lm does not require pre-training or fine-tuning, is task-agnostic, and can handle non-binary demographic groups.\nIn the following, first in § 2  ###reference_### we carefully discuss the problem setting, introduce notations, and formally define terms such as reliability and bias.\nNext, in § 3  ###reference_### we review the architecture of Requal-lm, and develop our methodology for finding an equitable centroid and return the closest output to it, the one that is both equitable and reliable.\nThe experimental evaluations, related work, and the discussions of the benefits and limitations of Requal-lm are provided in § 4  ###reference_###, § 5  ###reference_###, § 6  ###reference_###, and § 8  ###reference_###, respectively."
        },
        {
            "section_id": "2",
            "parent_section_id": null,
            "section_name": "Preliminaries",
            "text": "– (Input) Task: We consider a task, such as subset selection, sentence completion, assembling a team of experts, etc., described in form of a prompt: a natural language instruction.\n– (Input) Demographic Groups: We assume the existence of at least one sensitive attribute (e.g., sex) that specify the demographic groups  (e.g., {male, female}). The demographic groups are used to specify the output bias.\n– LLM: We assume access to (at least) one LLM, which is used for task answering. The LLM is randomized, i.e., the tokens are sequentially drawn based on the underlying distribution of the (top-k or top-p%) token-probabilities.\nWe treat the LLM as a black-box oracle that upon querying generates an output based on the input prompt.\nTreating the LLM as black-box allows the adaptation of Requal-lm both for closed-source and open-source LLMs.\n– Text Embedding: We rely on an external text embedding model that transforms a text into an embedding vector.\nSpecifically, given a text ,\nit generates the vector representation .\nOur system, Requal-lm, is agnostic to the choice (but limited to the performance) of the embedding model,\nand can adapt any state-of-the-art text embedding technique.\nWithout loss of generality, we use Instructor – a method for generating task-specific embeddings in accordance with provided instructions Su et al. (2023  ###reference_b18###).\nGiven two text phrases  and  and their corresponding embeddings  and , the similarity between  and  is measured as the cosine similarity between their embeddings, i.e., .\nSimilarly, the distance between  and  is defined as .\nLet  be an output generated for the prompt  comprising a sequence of  tokens  sequentially generated by the LLM.\nAt each iteration , let  be the probability of generating the token . Then  can be computed as the product of its token probabilities. That is, .\nBias is sometimes inherent to the task at hand and is not harmful. For example, when the task involves summarizing or rephrasing a paragraph that is particularly written about a specific gender, the resulting output tends to be naturally biased towards that gender. We call this type of output bias as the inevitable bias.\nFormally, we say a bias level  is inevitable\nif there is no valid output  with a bias less than .\nIn other words, for any output  where , we can say .\nTherefore, we define the inevitable bias as .\nWe consider any bias that is not inevitable, discriminatory.\nHarmful stereotypes are in this category. We call this type of output bias as the harmful bias.\nConsidering equity as our objective in this paper, we would like to minimize harmful bias in the outputs.\nThe harmful bias of an output can be computed by subtracting its bias from the inevitable bias, i.e., .\nAfter defining the terms and notations, we are able to formulate our problem: given a task presented in the form of a prompt , and including the demographic groups , the objective is to identify an output , such that it maximizes  and minimizes .\n###figure_1###"
        },
        {
            "section_id": "3",
            "parent_section_id": null,
            "section_name": "Technical Details",
            "text": ""
        },
        {
            "section_id": "3.1",
            "parent_section_id": "3",
            "section_name": "Architecture Overview",
            "text": "Figure 1  ###reference_### shows the architecture of Requal-lm.\nFollowing the Monte-carlo method described in § 3.2  ###reference_###, the first step is to obtain a set of iid output samples by issuing  independent queries to the LLM.\nThe results are subsequently fed into the text embedding model, Instructor, to obtain the vector representations .\nNext, the vector representations, as well as the vector representations of the demographic groups, pass on to the aggregation function (referred to as AVG in the figure). The aggregation function generates the vector representation that corresponds to the average of  to .\nFinally, a nearest neighbor search is applied to the sample outputs to retrieve the output that is most similar output to the average."
        },
        {
            "section_id": "3.2",
            "parent_section_id": "3",
            "section_name": "Methodology",
            "text": "Our approach for satisfying reliability and equity in LLM outputs is a Monte-carlo method, which relies on repeated sampling and the central limit theorem Durrett (2010  ###reference_b7###).\nBased on the law of large numbers, iid samples can serve for approximating their underlying distribution. That is because the expected number of occurrences of each observation is proportional to its probability.\nRecall that the outputs for a prompt  are generated based on the probability distribution . Particularly, the probability that an output  is sampled is .\nTherefore, the expected value of  is equal to the mean of  in the embedding space, .\nNow consider a set  of iid output samples for the prompt . Let  be the sample mean of the representation vectors in . That is,\nSimilarly, let  be the standard deviation of the samples.\nFollowing the central limit theorem,  follows , the Normal distribution with the mean  and standard deviation .\nFor simplicity, in the rest of the paper, we call  the centroid of the output samples.\nRequal-lm considers two approaches for specifying the value of : (i) fixed budget and (ii) fixed error.\nOne can consider a fixed budget  to ensure the sampling cost does not exceed . Specifically, if the cost of each query is , then .\nAlternatively, when a flexible budget is available, one can collect enough samples to bound the confidence error for a specific confidence level  (e.g., 95%). The confidence error  guarantees .\nFollowing the central limit theorem and using the Z-table, the confidence error is computed as ."
        },
        {
            "section_id": "3.3",
            "parent_section_id": "3",
            "section_name": "Equity-aware Aggregation",
            "text": "Using the centroid of sample outputs  as the estimation of , we can estimate the reliability of each output  as , and identify the output with the maximum expected reliability.\nFigure 2  ###reference_### shows a toy T-SNE visualization of  sample outputs, while their centroid is marked with a plus sign. The distance of the points from the centroid show their expected reliability. In this example,  is the most reliable output.\nIn the figure, the bias values are specified with a green-to-red color coding, where green is the minimum bias.\nFrom the figure, one can notice that , although being the closest to the centroid, has a high bias.\nOn the other hand,  is both highly reliable and has a low bias value; hence it would be a better output. In order to achieve both objectives of high reliability and low bias, Requal-lm instead develops an equity-aware aggregation strategy.\n###figure_2### Equation 1  ###reference_### computes the centroid as the average over all of the sampled outputs.\nInstead, to achieve equity, it is desirable to disregard the biased outputs and instead compute the average of unbiased outputs, which we call equitable centroid or weighted centroid.\nHowever, since the bias values are continuous, Requal-lm assigns a weight to each sample proportional to how biased it is. Particularly, focusing on minimizing the harmful bias, the weight of each sample  is computed using the normalized bias values . Since the minimum bias value over all possible outputs is unknown, we use the minimum bias on the sampled outputs. Formally, each weight  is computed as\nFinally, the equitable centroid is computed using as the weighted average over  as"
        },
        {
            "section_id": "4",
            "parent_section_id": null,
            "section_name": "Experiments",
            "text": "In this section, we present our comprehensive experimental analysis on three separate tasks: Subset Selection, Chat Completion, and Masked Language Prediction. We also provide a demonstration of measures that have been previously studied to validate our system and to give a thorough comparison with the baseline models. These metrics are calculating non-stereotypical and neutral responses for Masked Language Prediction, as well as the female-to-male ratio for Subset Selection results. We use 3 baselines to compare our results with. The first baseline (referred to as Pair-Ranker) proposed by Jiang et al. (2023  ###reference_b12###) is a pair-wise ranking model that uses a cross-attention Transformer that can score a pair of output candidates by encoding them with the input text. The second baseline queries the LLM once and returns its output. We refer to this baseline as First-Response. The third baseline (referred to as Debiased-GPT). Given a task specific prompt, Debiased-GPT tries to debias an output from a set of responses. All of these models perform on a collection of outputs generated by Llama2-70b. We refer to the output of Requal-lm closest to the weighted (equitable) centroid as Weighted Output, while the most similar output to the centroid (the output maximum reliability) is called Unweighted Output, and the one with minimum bias is referred as Min-bias Output."
        },
        {
            "section_id": "4.1",
            "parent_section_id": "4",
            "section_name": "Experiment setup",
            "text": "Environment: We performed our evaluations using two LLMs: Llama2, 70 billion parameters (Llama2-70b), alongside GPT3.5-turbo APIs. All of our experiments were conducted on the Google Colab.\nDefault Values:\nTo ensure obtaining relevant and creatively diverse responses from one model in every iteration, we randomly sample temperature values from a uniform distribution in the range . We modify the presence and frequency penalty by drawing a random value in the range ."
        },
        {
            "section_id": "4.2",
            "parent_section_id": "4",
            "section_name": "Datasets",
            "text": "Our experiments use two benchmark datasets, including StereoSet Nadeem et al. (2021  ###reference_b17###) and WinoBias Zhao et al.  ###reference_b23###, which have been utilized before for detecting bias in Language Models. The Forbes 2022 Billionaire 222Forbes-worlds-billionaires-list-2022  ###reference_orbes-worlds-billionaires-list-2022### dataset and the Students 333Student-dataset  ###reference_ePhysicalizations/blob/master/Zooid_Vis/bin/data/student-dataset.csv### dataset are used for subset selection (please refer to Appendix B  ###reference_### for more details). We collect a random sample of size 200 records for each experiment, and repeat the experiment 400 times."
        },
        {
            "section_id": "4.3",
            "parent_section_id": "4",
            "section_name": "Subset Selection",
            "text": "Previous studies have explored Subset Selection for the purpose of identifying smaller datasets for efficient training or fine-tuning Wang et al. (2023  ###reference_b20###), Killamsetty et al. (2023  ###reference_b14###). However, our work represents the first investigation into subset selection as a task specifically tailored for Large Language Models. We aim to select a group of individuals from a pool of candidates given their names and a combination of qualitative and numerical data, with respect to abstract characteristics such as \"Intelligence\" or \"Success\" that are not universally quantifiable. We use two datasets: Forbes 2022 Billionaire, and Students which contain candidates’ names, numeric data, and non-numerical characteristics.\nIn our experimental investigations, we noted that a high impact of input order in the output, as the entities at the top of the input had a higher chance of appearing in the output. This has been reflected in the high Jaccard similarity of the outputs for the same input order (see the example in Table 1  ###reference_###).\nTo address this issue, we implemented a strategy of shuffling the data pool after every time we prompt a model. We evaluate our results against 3 baselines, described previously."
        },
        {
            "section_id": "4.3.1",
            "parent_section_id": "4.3",
            "section_name": "4.3.1 Comparison against Baselines",
            "text": "Next, in order to compare our results with the baselines, we used Students and Forbes 2022 Billionaire datasets on subset selection with samples. Looking at Figure 4(b) ###reference_sf2### and Figure 4(a) ###reference_sf1###, it is evident that while the bias distribution of all baselines is similar to Unweighted Output.\n\nAmong the baselines, Debiased-GPT demonstrated slightly lower biases than the other two baselines, especially in the Forbes 2022 Billionaire dataset. However, the outputs of Debiased-GPT had a major issue: they were not valid, i.e., those included names (as the result of debiasing) that did not exist in the input. \n\nTo make the plots more readable, we did not include the reliability values for the Debiased-GPT and First-Response baselines. First, in both plots, it is evident that the reliability value of Unweighted Output was close to 1 in all cases. \n\nOn the other hand, the reliability gap of Pair-Ranker with Unweighted Output was high (with a high fluctuation). We would like to also point out the large number of calls to the LLM by Pair-Ranker as it requires extra queries in its pairwise comparison phase."
        },
        {
            "section_id": "5",
            "parent_section_id": null,
            "section_name": "Related Work",
            "text": "Language models have gained popularity due to their proficiency at comprehending human language. Nevertheless, prior research has examined numerous limitations of these models, particularly in terms of their reliability and fairness. Various techniques have been previously presented to mitigate bias in language models while enhancing their reliability.\nIn this literature, drop out is a regularization technique adopted to mitigate gender bias Meade et al. (2022  ###reference_b16###); Webster et al. (2020  ###reference_b21###). The interruption generated by this strategy restricts the model from acquiring the ability to detect the connections between words that ultimately builds stereotypes. Some studies propose reducing bias in pre-trained models and enhancing dependability through diverse data augmentation. This involves incorporating data points that cover various demographics Zmigrod et al. (2019  ###reference_b24###); Dinan et al. (2020  ###reference_b6###); Barikeri et al. (2021  ###reference_b2###).\nAdditionally, there are studies that focus on mitigating bias in word representation using post-processing techniques Bolukbasi et al. (2016  ###reference_b3###), as well as in sentence representation May et al. (2019  ###reference_b15###) and context representations Caliskan et al. (2017  ###reference_b5###); Kaneko and Bollegala (2021  ###reference_b13###). Nevertheless, certain algorithms necessitate the process of retraining the model Bordia and Bowman (2019  ###reference_b4###) or finetuning Gira et al. (2022  ###reference_b9###).\nWeighted sampling to improve fairness in classification tasks has been studied before Ueda et al. (2023  ###reference_b19###) but, to the best of our knowledge, this paper is the first to use repeated sampling for fairness (and reliability) in the context of LLMs.\nPerhaps the most similar paper to our work is Jiang et al. (2023  ###reference_b12###) (called Pair-Ranker in our experiments), that uses pairwise comparison between the LLM outputs to rank them. While Pair-Ranker also takes as the input a set of LLM outputs and rank them, it has different goals and follows different technical approaches from Requal-lm. Also,\nPair-Ranker has a significantly higher query cost, compared to Requal-lm: Pair-Ranker issues an extra  calls to the LLM to rank the outputs, while Requal-lm does not issue any additional calls other the  calls to collect the outputs."
        },
        {
            "section_id": "6",
            "parent_section_id": null,
            "section_name": "Benefits",
            "text": "In the following, we list some of the advantages of Requal-lm, compared to the existing approaches.\n– A wide range of task:\nLLMs continuously find new applications in solving interesting problems across different domains.\nRequal-lm is not limited to specific tasks (such as sentence completion). It naturally fits to any task specified as a prompt and its output can be evaluated in the embedding space based on Definitions 1  ###reference_inition1### and 2  ###reference_inition2###.\n– Agnostic to the choice of LLM Model and the text embedder:\nRequal-lm treats the LLM model as black-box.\nAs a result, any state-of-the-art models can be readily adapted by it. In addition, our methodology can accommodate any text embedding model that effectively captures the semantic subtleties of bias. Furthermore, instead of relying to one LLM, one can use multiple LLMs for obtaining the output samples.\n– No need for pre-training or fine-tuning:\nRequal-lm is a reliability and equity wrapper that can be applied readily on top of any LLM.\n– Optimizing both reliability and equity:\nGiven the randomized nature of LLMs alongside historical biases in data, equitably finding a reliable output for the task at hand is critical.\nSatisfying this requirement make Requal-lm a good candidate, at least for the applications with societal impact.\n– Not limited to specific and binary demographic groups:\nWhile existing work in NLP has been mostly focused on gender bias and binary sensitive attributes, Requal-lm is designed to work both in binary and non-binary settings, for a wide range of demographic groups that could be specified in the text-embedding space.\n– Distinguishes between harmful and inevitable bias:\nAs explained earlier, some level of bias may be inevitable for a given task, such as summarizing a paragraph about African-American history.\nWhile approaches such as output debiasing cannot identify such bias, Requal-lm distinguishes between those cases and the harmful bias.\n– Always generates valid results:\nAssuming that the LLM generates valid outputs for a given prompt, Requal-lm always generates a valid result. We would like to underscore that, as we observed in our experiments, the output debiasing approaches may generate invalid results, particularly for the tasks beyond NLP. For example, let us consider Example 1  ###reference_### once again, where the objective is to select a subset of candidates from a pool.\nThe generated output for this task is a set of names. Now suppose all those names are male. Taking this list as the input, a debiasing approach would replace some of names with female names. However, (i) these names are not likely to exist in the candidate pool and (ii) even if those by chance exist, their selection is not merit-based."
        },
        {
            "section_id": "7",
            "parent_section_id": null,
            "section_name": "Conclusion",
            "text": "Large language models exhibit remarkable versatility due to their ability to understand human language and generate content across various domains, languages, and tasks.\nHowever, responsible usage of LLMs calls to first understand and minimize the potential harms of these technologies. Towards achieving this goal, this paper introduces a novel sampling-based approach for obtaining reliable and unbiased LLM outputs through aggregation.\nOur design choice to consider the LLM as black-box, facilitates scaling with the fast growing LLM technologies. Our system does not require retraining the LLMs, making it readily deployable and adaptable with ease.\nIn this paper, we optimize for equity, measured in the embedding space using cosine similarity with the vector of demographic groups. Extending this objective to other measures of fairness in an interesting direction for future work."
        },
        {
            "section_id": "8",
            "parent_section_id": null,
            "section_name": "Limitations",
            "text": "Having mentioned some of it benefits, we now discuss some of the limitations of Requal-lm.\nIt is important to underscore that our approach avoids modifying the internal configurations of the models it uses. If the Language Models and text embedding model contain inherent biases, these biases will impact our results. Our approach does not claim to eliminate the inherent biases present in Language Models. Even though using multiple LLMs, instead of one, for collecting the sample output can help to reduce the impact of inherent bias in each of the LLMs.\nOur approach heavily depends on the effectiveness of the embedding vectors produced by Su et al. (2023  ###reference_b18###) and their ability to capture the subtle semantic biases present in phrases. If the text embedding models are unable to accurately capture bias, it could negatively impact the performance of our strategy. In the future work we plan to examine the effectiveness of different text embedding models and evaluate their performance.\nAdditionally, although our approach does not require knowledge of sensitive attributes, it does require an understanding of minority groups in order to correctly determine weighted averages.\nFurthermore, beyond human evaluation, we lack a quantitative metric to assess the validity of the final output. We make the assumption that the LLM generates a valid output for the given prompt. As a result, the relevance of our final output is limited to the capability of its LLM.\nFilling this gap is an interesting research question we consider for our future work.\nFurthermore, our objective is to broaden the application of our approach to include other sensitive attributes and demographic groups."
        }
    ]
}