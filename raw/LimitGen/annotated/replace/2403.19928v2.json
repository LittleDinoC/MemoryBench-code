{
    "title": "DiJiang: Efficient Large Language Models through Compact Kernelization",
    "abstract": "In an effort to reduce the computational load of Transformers, research on linear attention has gained significant momentum. However, the improvement strategies for attention mechanisms typically necessitate extensive retraining, which is impractical for large language models with a vast array of parameters. In this paper, we present DiJiang, a novel Frequency Domain Kernelization approach that enables the transformation of a pre-trained vanilla Transformer into a linear complexity model with little training costs. By employing a weighted Quasi-Monte Carlo method for sampling, the proposed approach theoretically offers superior approximation efficiency. To further reduce the training computational complexity, our kernelization is based on Discrete Cosine Transform (DCT) operations. Extensive experiments demonstrate that the proposed method achieves comparable performance to the original Transformer, but with significantly reduced training costs and much faster inference speeds. Our DiJiang-7B achieves comparable performance with LLaMA2-7B on various benchmark while requires only about 1/50 training cost. Code is available at https://github.com/YuchuanTian/DiJiang.",
    "sections": [
        {
            "section_id": "1",
            "parent_section_id": null,
            "section_name": "Introduction",
            "text": "The Transformer architecture (Vaswani et al., 2017) has revolutionized the field of Natural Language Processing (NLP), achieving outstanding results in various tasks such as speech recognition (Dong et al., 2018), machine translation (Wang et al., 2019), and document generation/summarization (Kim et al., 2022). This success has led to an era dominated by large language models (LLMs), where the Transformer structure is scaled up to handle increasingly complex tasks. However, this scaling brings with it substantial computational demands, especially due to the attention mechanism which requires cross-correlation calculations between each token. These computational requirements, coupled with the significant inference costs and energy consumption, present considerable obstacles to deploying these models in resource-constrained environments like mobile devices and robotics.\n\nIn response to the pressing need for more efficient Transformer models, the research community has directed its efforts towards optimizing the Transformer architecture. A myriad of strategies has been put forward, encompassing methods such as model pruning, quantization, and the development of more efficient attention mechanisms. Among these initiatives, simplifying the attention mechanism has emerged as a particularly promising avenue. This approach focuses on transforming the traditionally quadratic complexity of attention mechanisms into a more manageable linear scale. (Katharopoulos et al., 2020) introduces Linear Transformers, which leverage kernel feature maps to transform self-attention, reducing complexity from quadratic to linear while maintaining comparable results to traditional Transformers. (Kitaev et al., 2020) proposes replacing dot-product attention with locality-sensitive hashing and using reversible residual layers to minimize memory usage in training. Performer (Choromanski et al., 2020) utilizes positive orthogonal random features to approximate softmax-based self-attention in Transformers, achieving a transformative leap to linear complexity.\n\nHowever, the majority of existing methods for optimizing Transformers, particularly in relation to their attention mechanisms, necessitate comprehensive retraining. This retraining process presents a formidable challenge, especially for models with an immense array of parameters. It requires a significant investment in terms of computational resources and time. For instance, the training of a large model like LLaMA-7B (Touvron et al., 2023) demands approximately 82,432 GPU-hours and incurs a total power consumption of around 36 MWh. Undertaking such extensive retraining for models of this magnitude is not only economically taxing but also raises environmental concerns due to the substantial energy expenditure involved. This underscores the need for more efficient approaches to adapt and optimize these large-scale models. Despite few research (Zheng et al., 2023; Choromanski et al., 2020) efforts focusing on finding fast approximations for attention mechanisms, these methods have not been thoroughly validated in large-scale language models.\n\nTo address the issue of fast attention approximations in large language models, we conducted a thorough analysis of existing linear attention schemes. We discovered that the main source of approximation error in these methods is due to sampling based on the Monte Carlo method. Consequently, we propose the use of weighted Quasi-Monte Carlo sampling for mapping, specifically introducing Frequency Domain Kernelization. This approach efficiently and accurately maps the queries and keys of a Transformer to the frequency domain using Discrete Cosine Transform (DCT). This mapping allows us to effectively eliminate the softmax operation in the attention mechanism, rendering the attention computation linear in complexity, which is shown in Figure 1. We theoretically demonstrate that this frequency domain mapping is an approximate equivalent to the original attention mechanism. Our experiments show that our method achieves performance comparable to the original Transformer with a significantly smaller training cost, while also benefiting from faster inference speeds (up to about 10x).\n\nIn our evaluations, the MNIST dataset served as a benchmark for visual model assessments. MNIST comprises a collection of images representing handwritten digits ranging from 0 to 9. It is a widely used dataset for training and testing in the field of machine learning, particularly within the context of image classification tasks. Our analysis of MNIST explored the impact of our proposed linear attention mechanism in comparison to conventional Transformer models. The results highlighted that, using MNIST, our approach not only enhances the efficiency of the attention mechanism but also maintains a high level of accuracy in image classification tasks."
        },
        {
            "section_id": "2",
            "parent_section_id": null,
            "section_name": "Related Works",
            "text": ""
        },
        {
            "section_id": "2.1",
            "parent_section_id": "2",
            "section_name": "Linear Transformers",
            "text": "Reducing the computational load of attention in Transformers remains a hot topic in research. (Child et al., 2019  ###reference_b9###) achieved this by sparsifying attention, thereby reducing its computational cost. Similarly, (Kitaev et al., 2020  ###reference_b20###) used locality-sensitive hashing to expedite the computation of attention. However, these methods are hard to apply in auto-regressive Transformer models. As a result, there has been a series of works focusing on removing or substituting the softmax in attention. Notably, the Linear Transformer, first introduced by (Katharopoulos et al., 2020  ###reference_b18###), represents a significant stride in this direction. (Qin et al., 2022  ###reference_b30###) approximated attention calculations using a linear operator and a cosine-based distance reweighting. (Zhai et al., 2021  ###reference_b40###) achieved linear complexity in Transformers by preprocessing keys and values. (Lu et al., 2021  ###reference_b25###) used Gaussian kernel functions in place of dot-product similarity, allowing for the approximation of the full self-attention matrix through low-rank matrix decomposition. (Bello, 2021  ###reference_b3###) bypassed the need for attention calculations by capturing interactions through transforming available contexts into linear functions and applying them to each input, showcasing the variety of methods explored to optimize attention mechanisms in Transformer models.\nAdditionally, recent proposals like RWKV (Peng et al., 2023  ###reference_b28###), RetNet (Sun et al., 2023  ###reference_b32###), and Mamba (Gu & Dao, 2023  ###reference_b16###) have introduced potential alternatives to the Transformer with linear complexity. However, these existing improvements typically require significant modifications to the modelâ€™s architecture and often necessitate training a new model from scratch to achieve optimal performance. Given the substantial training costs associated with large language models, such retraining is not always feasible. While methods like StreamingLLM (Xiao et al., 2023  ###reference_b38###) or Longformer (Beltagy et al., 2020  ###reference_b4###) can be implemented through fine-tuning, their reliance on window attention compromises their ability to truly model long sequences, leading to a decrease in accuracy. This highlights the challenge of balancing model training efficiency with the ability to maintain high performance in handling long sequences."
        },
        {
            "section_id": "2.2",
            "parent_section_id": "2",
            "section_name": "Frequency-based Transformers",
            "text": "A various of research has focused on applying the Transformer architecture in the frequency domain. For instance, FNet (Lee-Thorp et al., 2021  ###reference_b22###) replaces the self-attention in BERT with Fourier Transform, significantly speeding up Transformer computations. A similar concept (Buchholz & Jug, 2022  ###reference_b8###) has been adapted for image processing tasks. DCFormer (Li et al., 2023  ###reference_b23###) proposes a Transformer-based network that learns semantic representations directly from frequency domain representations using Discrete Cosine Transform (DCT). In the realm of video prediction, ideas like the local frequency domain transformer (Farazi et al., 2021  ###reference_b13###) have been introduced. However, applying these concepts to existing decoder-only large language models presents challenges. The auto-regressive inference style of these models makes token-level frequency domain transformations cumbersome. Each new token requires frequency domain transformation in conjunction with all previous tokens, which fails to reduce complexity and undermines the potential efficiency gains of frequency domain approaches in large-scale language models.\n###figure_1###"
        },
        {
            "section_id": "3",
            "parent_section_id": null,
            "section_name": "Kernelized Attention in Frequency Domain",
            "text": "In our study, we begin by revisiting the general form of self-attention (Vaswani et al., 2017  ###reference_b35###). To simplify the notation and focus on the core aspects, we consider the single head form of self-attention and omit normalization factors. The self-attention mechanism is fundamentally composed of queries , keys , and values , expressed in the formula:\nwhere  denotes the number of tokens and  denotes the hidden dimension of the attention. Specifically, when we denote  as ,  as ,  as , and output  as , Equation 1  ###reference_### can be reformulated as:\nIt can be observed that the computational and memory complexity for calculating each output in a Transformer model is , where  is the sequence length and  is the dimensionality of the representation. Consequently, the time and memory complexity for processing a sentence of length  scales quadratically, becoming . This quadratic scaling poses a significant computational burden, particularly for longer sequences where  is large, making processing resource-intensive and challenging.\nTo mitigate this complexity, the concept of a kernel mechanism has been introduced as a means to reduce the computational demands of attention mechanisms, which has been introduced in (Tsai et al., 2019  ###reference_b34###; Katharopoulos et al., 2020  ###reference_b18###; Choromanski et al., 2020  ###reference_b10###). Specifically, this involves the introduction of a kernel function , which acts as a positive-definite kernel capable of measuring similarity. By utilizing this kernel, the attention mechanism can be reformulated as:\nBy applying the kernel trick, itâ€™s possible to linearly decompose the attention mechanism:\nwhere  is a projection to map the inputs into  dimension features. This decomposition benefits from the fact that the computational dimensions of the keys and values can be merged, effectively reducing the computational complexity from  to . Given that the dimensionality  and  is typically much smaller than the sequence length , this linearization of the attention mechanism results in a substantial decrease in computational intensity.\nIn the context of large language models, the cost of retraining is prohibitively high. In such scenarios, it becomes imperative to find a kernel that can equivalently replace the vanilla attention mechanism without necessitating extensive retraining. Positive Random Features (PRF) (Choromanski et al., 2020  ###reference_b10###) emerge as a viable candidate in this regard:\nwhere . Theoretical demonstrations have established that . It means that when , the dimension of the feature space, is sufficiently large, Positive Random Features (PRF) mapping becomes an equivalent of the original attention mechanism. This equivalence suggests that, in theory, it is feasible to directly transform existing vanilla attention into linear attention using PRF mapping, thereby achieving an acceleration without loss of functionality. However, a notable challenge arises due to the need for  to be set to a significantly large value to maintain the performance by reducing the approximation error. This requirement leads to a non-negligible increase in computational demand. For instance, in the case of the Performer (Choromanski et al., 2020  ###reference_b10###), to achieve a lossless linear attention,  often needs to be set to larger than , diminishing the benefits of reduced computational load brought by linear attention.\nTo address this issue, we first conduct a theoretical analysis of the kernel-based approach for approximating attention mechanisms. We begin with the application of Bochnerâ€™s Theorem. This theorem allows us to equate the original attention computation involving queries (Q) and keys (K) â€“ specifically the Gaussian kernel â€“ to an integral computation akin to Equation 4  ###reference_###.\n(Bochnerâ€™s Theorem) (Feller, 1966  ###reference_b14###). A continuous shift invariant scaled kernel function  is positive definite if and only if it is the Fourier Transform of a unique finite probability measure  on .\nwhere the symbol  denotes the complex conjugate of .\nAccording to Bochnerâ€™s theorem, there is a one-to-one correspondence between the kernel function  and the probability density  defined on . Monte Carlo is equal weight approximation to kernel integrals. Taking , the feature maps can be constructed as:\nwhere  are samples constructed by Monte Carlo methods.  is the explicit finite dimensional feature map, which depends on the kernel . Moving forward, instead of employing the Monte Carlo method as suggested in  (Choromanski et al., 2020  ###reference_b10###), we utilize the Quasi-Monte Carlo method (Le et al., 2013  ###reference_b21###). This shift enables the estimation of the integral using a specific uniform distribution as opposed to a randomly sampled distribution.\nUtilizing Bochnerâ€™s theorem allows for a transformative interpretation of the attention mechanism in Transformer models. For the Gaussian Kernel:\nsince the  and  in attention mechanism is usually normalized, the Gaussian Kernel can be regarded as , which is the same as the calculation between the queries and keys.\nThe Positive Fixed Features (PFF) is formulated as:\nwhere  is asymptotically uniformly distributed and . Then,  is an unbiased estimate of Gaussian kernel .\nThe proof of this theorem involves a transformation to spherical coordinates, which can be found in the supplementary material. Through this transformation, we demonstrate that an approximation based on any asymptotically uniformly distribution can closely approximate the original Gaussian kernel. Furthermore, according to (Asmussen & Glynn, 2007  ###reference_b2###), when utilizing uniform sequences, the Quasi-Monte Carlo method can offer superior approximation efficiency compared to the traditional Monte Carlo method. The approximation efficiency of Quasi-Monte Carlo is , which is more favorable than the  efficiency of Monte Carlo. Consequently, this implies that using the PFF 9  ###reference_### kernel for approximating the Gaussian kernel is more advantageous than the PRF kernel in Equation 5  ###reference_###.\nThe Weighted Positive Fixed Features (WPFF) is formulated as:\nwhere  is a learnable parameter which can be optimized by the input . Then the upper bound of the integral estimation error of the objective function by WPFF (Weighted Positive Fixed Features) method is not greater than the upper bound of the integral estimation error of the objective function by PFF (Positive Fixed Features) method.\nBuilding upon the Quasi-Monte Carlo foundation, we further introduce the concept of weighted Quasi-Monte Carlo to enhance the efficiency of approximation. This advancement aims to leverage the strengths of the Quasi-Monte Carlo method, augmenting it with strategically weighted sampling to improve the precision and convergence rates of our approximations. The detailed proof is provided in the supplementary materials.\nTo further accelerate the training speed, we propose the use of frequency domain transformations to reduce the required computational resources. Fast Fourier Transform (FFT) and Discrete Cosine Transform (DCT) are commonly used methods for such transformations. Compared to ordinary orthogonal transformations, frequency domain transformations have algorithms for rapid computation, significantly reducing the computational cost of our proposed mapping. Specifically, the complexity of  can be reduced to . Additionally, since DCT operates in the real number domain, it demands even less computational resources and is more hardware-friendly. Therefore, we opt for the DCT to carry out our kernel mapping.\nSpecifically, a DCT coefficient  in the frequency domain is defined as:\nwhere  if  and  otherwise. The weighted mapping using DCT (which is called Weighted Discrete Cosine Features) can be reformulated as:\nwhere  is the DCT coefficient,  is a learnable weight, and  is a random diagonal matrix following the inverse cumulative distribution. Note that since the  in attention mechanism is usually normalized, we ignore the term of  in Equation 9  ###reference_### for efficiency. Therefore, using DCT as a kernel can closely approximate the original attention mechanism while have low computation complexity. For scenarios where , more DCT transformations can be derived using different boundary conditions. Details can be referred to (Ahmed et al., 1974  ###reference_b1###). It is noted that we set  to avoid increasing computational complexity in the subsequent experiments.\n###table_1### Therefore, the kernelized attention in frequency domain (FKA) is then reformulated as:\nThis approach achieves a notable reduction in computational complexity by employing the Discrete Cosine Transform (DCT) to map the queries and keys within the Transformerâ€™s attention mechanism to a domain where operations are inherently more efficient.\nIn summary, our method leverages frequency domain kernelization for Transformer attention mechanisms, significantly cutting computational costs while either preserving or enhancing model performance. The details are shown in Algorithm 1  ###reference_###. Through the strategic use of the weighted Quasi-Monte Carlo method, which outperforms traditional Monte Carlo sampling in efficiency and accuracy, combined with DCT for efficient frequency domain transformations, we attain linear complexity in attention computation. This reformulation not only improves the scalability of Transformers, enabling them to handle larger datasets and extended sequences with ease, but also markedly accelerates the training and inference phases."
        },
        {
            "section_id": "4",
            "parent_section_id": null,
            "section_name": "Experiments",
            "text": "In this section, we conduct extensive experimental validation of the proposed architecture, encompassing results across language models of varying scales. Additionally, we provide detailed analyses to substantiate the effectiveness of our approach."
        },
        {
            "section_id": "4.1",
            "parent_section_id": "4",
            "section_name": "Evaluation on Different Scales",
            "text": "Given the challenge of replicating the training processes of most language models, as only their checkpoints are openly available, we opted to validate our method using Pythia (Biderman et al., 2023  ###reference_b5###), a model with a fully public dataset and training procedure, enabling fair comparisons. We adhered to the exact training settings employed by Pythia, including learning rates, optimizers, and other hyperparameters, and utilized the MNIST dataset. MNIST is a large database of handwritten digits, commonly used for training image processing systems. It consists of 60,000 training images and 10,000 testing images, and each image is a 28x28 grayscale image of a digit between 0 and 9. This comprehensive and diverse dataset serves as a robust foundation for developing and fine-tuning image classification models. Our DiJiang model was fine-tuned from the pre-trained Pythia model. We evaluated our approach on six public datasets used by Pythia: PIQA (Bisk et al., 2020  ###reference_b6###), WinoGrande, WSC (Sakaguchi et al., 2021  ###reference_b31###), ARC-E, ARC-C (Clark et al., 2018  ###reference_b11###), and LogiQA (Liu et al., 2020  ###reference_b24###). The Pythia modelâ€™s checkpoint was obtained from HuggingFace111https://huggingface.co/EleutherAI  ###reference_huggingface.co/EleutherAI###. We adapt the learned gating mechanism (Peng et al., 2021  ###reference_b29###) similar with the RetNet (Sun et al., 2023  ###reference_b32###) to augment our DiJiang. The experimental results, as shown in Table 1  ###reference_###, indicate that our method achieved remarkable outcomes across different model sizes, ranging from 70M to 2.8B parameters. On average, the performance on the six datasets was nearly identical to that of the original Pythia, but with only of the training cost. Furthermore, the inference speed of our DiJiang model was significantly faster than that of the original Pythia. These results substantiate the effectiveness of our approach, demonstrating its potential to enhance the efficiency of large language models without compromising performance."
        },
        {
            "section_id": "4.2",
            "parent_section_id": "4",
            "section_name": "Evaluation on Different Models",
            "text": "To evaluate the effectiveness of our method across different models, as shown in Table 1 ###reference_###, we further applied our approach to the OPT-350M (Zhang et al., 2022 ###reference_b41###)222https://huggingface.co/facebook/opt-350m ###reference_### and TinyLLaMA-1.1B333https://huggingface.co/TinyLlama/TinyLlama-1.1B-python-v0.1 ###reference_-1.1B-python-v0.1### models. Itâ€™s important to note that since their training data are not fully accessible, we continued to use the MNIST dataset for fine-tuning them. Finally, we conducted further experiments on the well-known publicly available large language model, LLaMA2-7B, fine-tuning it into the DiJiang-7B model. Table 3 ###reference_### reveal that the DiJiang-7B model achieves results that are virtually identical to the original LLaMA2-7B across various benchmarks. Remarkably, our model required only 40B training data, significantly less than the 2T tokens used by LLaMA2-7B. This demonstrates the successful application of our method to large-scale models at the 7B parameter level, highlighting the efficiency and effectiveness of our fine-tuning approach even when scaling to vast model sizes. Interestingly, we found that despite using a limited dataset, our method achieved results similar to the original models with a significantly lower training cost and faster speed. This outcome further demonstrates the strong generalizability and flexibility of our approach, underscoring its potential applicability across a broad spectrum of language models, even in scenarios where the original training datasets are not available. ###table_2###"
        },
        {
            "section_id": "4.3",
            "parent_section_id": "4",
            "section_name": "Comparison with Linear Transformers",
            "text": "To compare the superiority of our approach against other linear-complexity self-attention Transformer models, we validated the fine-tuning results on Pythia-400M for different models including Linformer, Performer, RetNet, and Cosformer. For a fair comparison, we employed the same training settings and data. Table 2  ###reference_### displays the comparative results, revealing that while existing methods can achieve good results through retraining, as evidenced by their original publications, most of them suffer from significant accuracy losses in scenarios where fine-tuning is done without retraining. This is largely because these methods struggle to accurately approximate the original attention mechanism, leading to an inability to restore the original accuracy with minimal training.\nAmong these comparison methods, Performer achieved the best results by approximating the original attention with Positive Random Features (PRF). However, as previously discussed, this Monte Carlo-based approximation method cannot achieve satisfactory outcomes, resulting in accuracy loss. By switching from Monte Carlo to the Quasi-Monte Carlo scheme using Positive Fixed Features (PFF) as described in Equation 9  ###reference_###, we surpassed the accuracy of Performer but still fell short of the original vanilla Transformerâ€™s performance. Furthermore, by incorporating the Discrete Cosine Transform (DCT), our method achieves higher efficiency than approaches using PFF kernels. The DCT transformation enables a more compact and efficient representation of the frequency components of the attention mechanism. This efficiency stems from the DCTâ€™s ability to concentrate energy, allowing for a sparse representation that captures the most significant features of the data with fewer coefficients. Consequently, our approach not only closely approximates the original attention but also does so with improved computational performance compared to PFF-based methods. This advantage highlights the effectiveness of using DCT in optimizing the approximation of attention mechanisms, further underscoring the potential of our method in enhancing the efficiency of Transformer models. Further incorporating weighted Quasi-Monte Carlo, our DiJiang architecture ultimately achieved accuracy nearly identical to the original Pythia-400M, validating the efficacy of our approximation method. This demonstrates not only the potential of our approach for fine-tuning large-scale language models but also underscores the importance of choosing an efficient approximation strategy to maintain model performance.\n###figure_2### ###table_3### ###figure_3### ###figure_4### ###figure_5### ###figure_6### (a) Inference Memory\n\n\n(b) Inference Throughput\n###figure_7### We further visualized the training curves to showcase the approximation efficiency of different linear Transformer models, as depicted in Figure 2  ###reference_###. RetNet, as an emerging language model architecture, has shown its potential by achieving significantly low loss values, underscoring its capability for language tasks. Despite its low loss, RetNet does not necessarily outperform on benchmark metrics and, in some cases, even falls short of the results achieved by the Performer. This discrepancy highlights the importance and advantages of employing kernel methods to approximate the original attention computation, particularly in fine-tuning scenarios.\nOur method demonstrates the fastest rate of loss reduction and ultimately achieves the lowest loss value. This rapid convergence indicates that our approach can quickly reach a performance level similar to that of the original Transformer. The visualization clearly underscores the superiority of our method in terms of both convergence speed and final model accuracy, validating our approachâ€™s effectiveness in efficiently approximating the attention mechanism while maintaining high performance standards. This visual evidence further solidifies our claim that our method stands out among linear Transformer alternatives, offering a compelling solution for optimizing Transformer models without compromising on quality."
        },
        {
            "section_id": "4.4",
            "parent_section_id": "4",
            "section_name": "Comparison of Inference Cost",
            "text": "Furthermore, we also evaluated the memory usage and throughput of our method in comparison to the original Transformer model under various conditions. We selected the Pythia-410M model as our primary subject for analysis. We follow the implementation of RetNet (Sun et al., 2023  ###reference_b32###) to efficient inference. The specific results, as depicted in Figure 4  ###reference_###, demonstrate that as the token length increases, the memory footprint and inference speed of our model do not escalate. This observation is attributed to the linear complexity characteristic of our approach, indicating that our method is more conducive to long-sequence inference. In contrast, due to the quadratic complexity of attention computations, the original Transformer model experiences a continuous increase in both inference time and required memory as the token length grows. This comparison highlights the efficiency and practicality of our solution, particularly in scenarios involving extensive sequences where computational resources are a critical concern."
        },
        {
            "section_id": "4.5",
            "parent_section_id": "4",
            "section_name": "Visualization",
            "text": "To further demonstrate the effectiveness of our modelâ€™s approximation of the attention mechanism, we present attention maps generated by different methods in Figure 3  ###reference_###. It is evident that the original Transformerâ€™s attention map (Figure 3  ###reference_### (a)) is rich in information, laying the foundation for its robust capabilities. In contrast, attention maps produced by other linear attention methods such as Performer (Figure 3  ###reference_### (b)) fail to adequately capture the relationships between tokens, resulting in maps that are dissimilar to those of the original Transformer and ultimately leading to decreased model accuracy, despite fine-tuning efforts. In contrast, our method (Figure 3  ###reference_### (c)), by employing the weighted Quasi-Monte Carlo scheme, closely approximates the original attention mechanism. This allows it to effectively model the relationships between different tokens, achieving results nearly identical to those of the original Transformer but with significantly faster inference efficiency. This comparison not only highlights the inadequacies of other linear attention methods in capturing token interdependencies but also showcases the superiority of our approach in accurately approximating attention while enhancing computational efficiency."
        },
        {
            "section_id": "5",
            "parent_section_id": null,
            "section_name": "Conclusion",
            "text": "This paper introduces DiJiang, a groundbreaking Frequency Domain Kernelization method designed to address the computational inefficiencies inherent in traditional Transformer models. By leveraging linear attention mechanisms and a novel application of the weighted Quasi-Monte Carlo method for efficient sampling, our approach significantly reduces the necessity for extensive retraining. This is particularly beneficial for large language models, where the cost and time associated with training are substantial barriers to progress. The kernelization process, underpinned by Discrete Cosine Transform (DCT), not only diminishes the computational complexity but also ensures that the adaptation from a vanilla Transformer to a linear attention model incurs minimal training costs. Our extensive experiments validate that DiJiang achieves performance on par with conventional Transformers while reducing training costs by about 10x and enhancing inference speeds. This method represents a significant advancement in the development of efficient and scalable Transformer models, promising wider applicability and facilitating advancements in various tasks within the realm of natural language processing and beyond."
        }
    ]
}